{"version":3,"sources":["webpack://dino3d/webpack/runtime/chunk loaded","webpack://dino3d/./app/src/linkedList.js","webpack://dino3d/./app/src/dino.js","webpack://dino3d/./app/src/floor/floor.js","webpack://dino3d/./app/src/floor/hill.js","webpack://dino3d/./app/src/ptero.js","webpack://dino3d/./app/src/floor/subfloor.js","webpack://dino3d/./app/src/cactuses/1bigcactus.js","webpack://dino3d/./app/src/cactuses/2bigcactus.js","webpack://dino3d/./app/src/cactuses/2mediumcactus.js","webpack://dino3d/./app/src/cactuses/2smallcactus.js","webpack://dino3d/./app/src/cactuses/3mediumcactus.js","webpack://dino3d/./app/src/cactuses/3smallcactus.js","webpack://dino3d/./app/src/decorations/1bigtree.js","webpack://dino3d/./app/src/decorations/1flower_pink.js","webpack://dino3d/./app/src/decorations/1flower_yellow.js","webpack://dino3d/./app/src/decorations/2flower_pink.js","webpack://dino3d/./app/src/decorations/2x2rock.js","webpack://dino3d/./app/src/decorations/2x3rock.js","webpack://dino3d/./app/src/decorations/3x3rock.js","webpack://dino3d/./app/src/decorations/3x4rock.js","webpack://dino3d/./app/src/decorations/dinoskull.js","webpack://dino3d/./app/src/decorations/hintgold.js","webpack://dino3d/./app/src/decorations/palm.js","webpack://dino3d/./app/src/decorations/scorpion.js","webpack://dino3d/./app/src/decorations/seaweed.js","webpack://dino3d/./app/src/decorations/skull.js","webpack://dino3d/./app/src/loader.js","webpack://dino3d/./app/src/floorSpawn.js","webpack://dino3d/./app/src/decSpawn.js","webpack://dino3d/./app/src/enemySpawn.js","webpack://dino3d/./app/src/index.js","webpack://dino3d/webpack/bootstrap","webpack://dino3d/webpack/runtime/define property getters","webpack://dino3d/webpack/runtime/hasOwnProperty shorthand","webpack://dino3d/webpack/runtime/jsonp chunk loading","webpack://dino3d/webpack/startup"],"names":["deferred","linkedList","this","tail","head","curr","data","node","value","next","prev","id","arr","push","Dino","frames","framesb","animTime","animTimeMin","frame","isb","active","hity","hitx","hitz","geometry","material","color","cube","scene","add","visible","hitbox","hitby","hitbx","hitbz","hitboxb","framesPos","z","y","x","framesbPos","dir","dirb","objLoader","OBJLoader","mtlLoader","MTLLoader","Promise","resolve","forEach","e","load","preload","setMaterials","mesh","length","then","sort","a","b","materialLibraries","position","setControls","animation","Scene","remove","document","addEventListener","code","jupm","setTimeout","i","rotation","power","interval","setInterval","clearInterval","positionadd","Floor","framePos","scale","multiplyScalar","Math","PI","Hill","Ptero","Subfloor","Bigcactus1","Bigcactus2","Mediumcactus2","Smallcactus2","Mediumcactus3","Smallcactus3","Bigtree1","Flower_pink1","Flower_yellow1","Flower_pink2","Rock2x2","Rock2x3","Rock3x3","Rock3x4","Dinoskull","Hintgold","Palm","Scorpion","Seaweed","Skull","loader","dino","floor","hill","ptero","subfloor","bigcactus1","bigcactus2","mediumcactus2","smallcactus2","mediumcactus3","smallcactus3","bigtree1","flower_pink1","flower_yellow1","flower_pink2","rock2x2","rock2x3","rock3x3","rock3x4","dinoskull","hintgold","palm","scorpion","seaweed","skull","FloorSpaw","Loader","list","init","DecSpawn","bg1","bg2","bg3","bg4","name","random","spawnbg1","spawnbg2","spawnbg3","spawnbg4","min","max","bg1i","bg2i","bg3i","bg4i","EnemySpawn","enemy_type","play","getElementById","htScore","start","camera","window","innerWidth","innerHeight","renderer","setSize","body","appendChild","domElement","setClearColor","density","fog","floorSpawn","decSpawn","enemySpawn","odd","speed","score","aspect","updateProjectionMatrix","intensity","light","set","target","opacity","transparent","water","animId","cancel","scoreInterval","innerHTML","repeat","abs","toString","animate","render","for","delete","dino_top","dino_bot","dino_left","dino_right","model","left_mid","left_top","right_top","minus","checkif","requestAnimationFrame","cancelAnimationFrame","style","display","getElementsByTagName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"uBAAIA,E,8BCAJ,MAAMC,EACF,cACIC,KAAKC,KAAO,KACZD,KAAKE,KAAO,KACZF,KAAKG,KAAO,KAEhB,UAAY,EACZ,IAAIC,GACA,MAAMC,EAAO,CACTC,MAAOF,EACPG,KAAM,KACNC,KAAM,KACNC,GAAIV,EAAWU,IAEnBV,EAAWU,KACO,OAAdT,KAAKC,KACLD,KAAKC,KAAOD,KAAKE,KAAOG,GAExBA,EAAKG,KAAOR,KAAKE,KACjBF,KAAKE,KAAKK,KAAOF,EACjBL,KAAKE,KAAOG,GAGpB,OAAOI,GAGH,IAFAT,KAAKG,KAAOH,KAAKC,KAEI,OAAdD,KAAKG,MAAe,CACvB,GAAIM,IAAOT,KAAKG,KAAKM,GAAI,CACjBT,KAAKC,OAASD,KAAKG,MAAQH,KAAKE,OAASF,KAAKG,MAC9CH,KAAKG,KAAKG,MAAQ,KAClBN,KAAKE,KAAOF,KAAKC,KAAO,MACE,OAAnBD,KAAKG,KAAKK,MACjBR,KAAKG,KAAKG,MAAQ,KAClBN,KAAKC,KAAOD,KAAKG,KAAKI,KACtBP,KAAKG,KAAKI,KAAKC,KAAO,MACI,OAAnBR,KAAKG,KAAKI,MACjBP,KAAKG,KAAKG,MAAQ,KAClBN,KAAKE,KAAOF,KAAKG,KAAKK,KACtBR,KAAKG,KAAKK,KAAKD,KAAO,OAEtBP,KAAKG,KAAKG,MAAQ,KAClBN,KAAKG,KAAKK,KAAKD,KAAOP,KAAKG,KAAKI,KAChCP,KAAKG,KAAKI,KAAKC,KAAOR,KAAKG,KAAKK,MAEpC,MAGJR,KAAKG,KAAOH,KAAKG,KAAKI,MAG9B,MACI,IAAIG,EAAM,GAEV,IADAV,KAAKG,KAAOH,KAAKC,KACI,OAAdD,KAAKG,MACRO,EAAIC,KAAK,CAACX,KAAKG,KAAKM,GAAIT,KAAKG,KAAKG,QAClCN,KAAKG,KAAOH,KAAKG,KAAKI,KAE1B,OAAOG,G,sBCrDf,MAAME,EACF,cAEIZ,KAAKa,OAAS,GACdb,KAAKc,QAAU,GAEfd,KAAKe,SAAW,GAChBf,KAAKgB,YAAc,GAEnBhB,KAAKiB,MAAQ,EACbjB,KAAKkB,KAAM,EACXlB,KAAKmB,QAAS,EAEdnB,KAAKoB,KAAO,EACZpB,KAAKqB,KAAO,IACZrB,KAAKsB,KAAO,IAEZ,CACI,MAAMC,EAAW,IAAI,MAAkB,IAAK,EAAG,KACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCG,MAAMC,IAAIF,GACVA,EAAKG,SAAU,EAEf7B,KAAK8B,OAASJ,EAGlB1B,KAAK+B,MAAQ,EACb/B,KAAKgC,MAAQ,IACbhC,KAAKiC,MAAQ,EAEb,CACI,MAAMV,EAAW,IAAI,MAAkB,IAAK,EAAG,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCG,MAAMC,IAAIF,GACVA,EAAKG,SAAU,EAEf7B,KAAKkC,QAAUR,EAGnB1B,KAAKmC,UAAY,CACb,CAAEC,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,IAG3BtC,KAAKuC,WAAa,CACd,CAAEH,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,IAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,GAAI,IACxB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,IAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,IAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,EAAGC,GAAI,KAG9B,OAEI,MAAME,EAAM,CACR,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAGEC,EAAO,CACT,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBAGEC,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBP,EAAIQ,SAASC,IACTL,EAAUM,KAAK,GAAGD,SAAUzB,IACxBA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGD,SAAUI,IACxBrD,KAAKa,OAAOF,KAAK0C,GACU,IAAvBrD,KAAKa,OAAOyC,QAAwC,IAAxBtD,KAAKc,QAAQwC,QAAcP,aAIvEN,EAAKO,SAASC,IACVL,EAAUM,KAAK,GAAGD,SAAUzB,IACxBA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGD,SAAUI,IACxBrD,KAAKc,QAAQH,KAAK0C,GACS,IAAvBrD,KAAKa,OAAOyC,QAAwC,IAAxBtD,KAAKc,QAAQwC,QAAcP,gBAIxEQ,MAAK,KACJvD,KAAKa,OAAO2C,MAAK,CAACC,EAAGC,IACbD,EAAEE,kBAAkB,IAAMD,EAAEC,kBAAkB,GAAW,GACrD,IAEZ3D,KAAKc,QAAQ0C,MAAK,CAACC,EAAGC,IACdD,EAAEE,kBAAkB,IAAMD,EAAEC,kBAAkB,GAAW,GACrD,OAKpB,IAAIhC,EAAOW,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAEzBpC,KAAKa,OAAOmC,SAASC,IACjBtB,EAAMC,IAAIqB,GACVA,EAAEpB,SAAU,KAEhB7B,KAAKc,QAAQkC,SAASC,IAClBtB,EAAMC,IAAIqB,GACVA,EAAEpB,SAAU,KAGhB7B,KAAK4D,SAAStB,EAAGD,EAAGD,GACpBpC,KAAK6D,cAEL7D,KAAKmB,QAAS,EACdnB,KAAK8D,YAGT,OAAOC,GACH/D,KAAKmB,QAAS,EAEdnB,KAAKa,OAAOmC,SAASC,GAAMtB,MAAMqC,OAAOf,KACxCjD,KAAKc,QAAQkC,SAASC,GAAMtB,MAAMqC,OAAOf,KAG7C,cACIgB,SAASC,iBAAiB,WAAYjB,IACnB,SAAXA,EAAEkB,MAA8B,cAAXlB,EAAEkB,OACvBnE,KAAKkB,KAAM,EAEXlB,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,EAClC7B,KAAKc,QAAQd,KAAKiB,OAAOY,SAAU,GAExB,UAAXoB,EAAEkB,MAA+B,SAAXlB,EAAEkB,MAA8B,YAAXlB,EAAEkB,MACzCnE,KAAKmB,QAAQnB,KAAKoE,UAI9BH,SAASC,iBAAiB,SAAUjB,IACjB,SAAXA,EAAEkB,MAA8B,cAAXlB,EAAEkB,OACvBnE,KAAKkB,KAAM,EAEXlB,KAAKc,QAAQd,KAAKiB,OAAOY,SAAU,EACnC7B,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,MAK9C,YAEIwC,YAAW,KACY,IAAfrE,KAAKiB,OACAjB,KAAKkB,IAGNlB,KAAKc,QAAQ,GAAGe,SAAU,EAF1B7B,KAAKa,OAAO,GAAGgB,SAAU,EAI7B7B,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,EAClC7B,KAAKc,QAAQd,KAAKiB,OAAOY,SAAU,EACnC7B,KAAKiB,MAAQ,IAERjB,KAAKkB,KAINlB,KAAKc,QAAQd,KAAKiB,OAAOY,SAAU,EACnC7B,KAAKc,QAAQd,KAAKiB,MAAQ,GAAGY,SAAU,IAJvC7B,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,EAClC7B,KAAKa,OAAOb,KAAKiB,MAAQ,GAAGY,SAAU,GAK1C7B,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,EAClC7B,KAAKc,QAAQd,KAAKiB,OAAOY,SAAU,EACnC7B,KAAKiB,UAEW,IAAhBjB,KAAKmB,QAAiBnB,KAAK8D,YAC3B9D,KAAKe,SAAWf,KAAKgB,cAAahB,KAAKe,UAAY,MACxDf,KAAKe,UAGZ,SAASuB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKmC,UAAY,CACb,CAAEC,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,IAG3BtC,KAAKuC,WAAa,CACd,CAAEH,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,IAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,GAAI,IACxB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,GAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,IAAKC,EAAG,GACvB,CAAEF,EAAG,IAAMC,GAAI,IAAKC,EAAG,IACvB,CAAEF,EAAG,IAAMC,GAAI,EAAGC,GAAI,KAG1BtC,KAAKmC,UAAUa,SAASC,IACpBA,EAAEb,GAAKA,EACPa,EAAEX,GAAKA,EACPW,EAAEZ,GAAKA,KAEXrC,KAAKuC,WAAWS,SAASC,IACrBA,EAAEb,GAAKA,EACPa,EAAEX,GAAKA,EACPW,EAAEZ,GAAKA,KAGX,IAAK,IAAIiC,EAAI,EAAGA,EAAI,EAAGA,IACnBtE,KAAKa,OAAOyD,GAAGV,SAASxB,EAAIpC,KAAKmC,UAAUmC,GAAGlC,EAC9CpC,KAAKa,OAAOyD,GAAGV,SAASvB,EAAIrC,KAAKmC,UAAUmC,GAAGjC,EAC9CrC,KAAKa,OAAOyD,GAAGV,SAAStB,EAAItC,KAAKmC,UAAUmC,GAAGhC,EAE9CtC,KAAKc,QAAQwD,GAAGV,SAASxB,EAAIpC,KAAKuC,WAAW+B,GAAGlC,EAChDpC,KAAKc,QAAQwD,GAAGV,SAASvB,EAAIrC,KAAKuC,WAAW+B,GAAGjC,EAChDrC,KAAKc,QAAQwD,GAAGV,SAAStB,EAAItC,KAAKuC,WAAW+B,GAAGhC,EAGpDtC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAKmC,UAAU,GAAGC,EAC3CpC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAKmC,UAAU,GAAGE,EAAI,IAC/CrC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAKmC,UAAU,GAAGG,EAE3CtC,KAAKkC,QAAQ0B,SAASxB,EAAIpC,KAAKmC,UAAU,GAAGC,EAC5CpC,KAAKkC,QAAQ0B,SAASvB,EAAIrC,KAAKmC,UAAU,GAAGE,EAAI,IAChDrC,KAAKkC,QAAQ0B,SAAStB,EAAItC,KAAKmC,UAAU,GAAGG,EAGhD,YAAYA,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAKmC,UAAUa,SAASC,IACpBA,EAAEb,GAAKA,EACPa,EAAEX,GAAKA,EACPW,EAAEZ,GAAKA,KAEXrC,KAAKuC,WAAWS,SAASC,IACrBA,EAAEb,GAAKA,EACPa,EAAEX,GAAKA,EACPW,EAAEZ,GAAKA,KAGX,IAAK,IAAIiC,EAAI,EAAGA,EAAI,EAAGA,IACnBtE,KAAKa,OAAOyD,GAAGV,SAASxB,EAAIpC,KAAKmC,UAAUmC,GAAGlC,EAC9CpC,KAAKa,OAAOyD,GAAGV,SAAStB,EAAItC,KAAKmC,UAAUmC,GAAGhC,EAC9CtC,KAAKa,OAAOyD,GAAGV,SAASvB,EAAIrC,KAAKmC,UAAUmC,GAAGjC,EAE9CrC,KAAKc,QAAQwD,GAAGV,SAASxB,EAAIpC,KAAKuC,WAAW+B,GAAGlC,EAChDpC,KAAKc,QAAQwD,GAAGV,SAAStB,EAAItC,KAAKuC,WAAW+B,GAAGhC,EAChDtC,KAAKc,QAAQwD,GAAGV,SAASvB,EAAIrC,KAAKuC,WAAW+B,GAAGjC,EAGpDrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAKmC,UAAU,GAAGC,EAC3CpC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAKmC,UAAU,GAAGE,EAAI,IAC/CrC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAKmC,UAAU,GAAGG,EAE3CtC,KAAKkC,QAAQ0B,SAASxB,EAAIpC,KAAKmC,UAAU,GAAGC,EAC5CpC,KAAKkC,QAAQ0B,SAASvB,EAAIrC,KAAKmC,UAAU,GAAGE,EAAI,IAChDrC,KAAKkC,QAAQ0B,SAAStB,EAAItC,KAAKmC,UAAU,GAAGG,EAGhD,SAASA,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKa,OAAOmC,SAASC,IACjBA,EAAEsB,SAASjC,GAAKA,EAChBW,EAAEsB,SAASlC,GAAKA,EAChBY,EAAEsB,SAASnC,GAAKA,KAEpBpC,KAAKc,QAAQkC,SAASC,IAClBA,EAAEsB,SAASjC,GAAKA,EAChBW,EAAEsB,SAASlC,GAAKA,EAChBY,EAAEsB,SAASnC,GAAKA,KAIxB,OACI,IAAIoC,EAAQ,IAEZxE,KAAKmB,QAAS,EAEd,IAAIsD,EAAWC,aAAY,KACnBF,GAAS,KACTxE,KAAKmB,QAAS,EACdnB,KAAK8D,YACL9D,KAAK4D,SAAS,EAAG,EAAG,GACpBe,cAAcF,IAEbzE,KAAKmB,QAAQnB,KAAK4E,YAAY,EAAGJ,EAAO,GAC7CA,GAAS,OACV,KCvTX,MAAMK,EACF,cAEI7E,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,KAAOE,EAAG,IAAMD,GAAI,MAG7C,OACI,MAAMG,EAAM,wBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,QACLjB,KAAKiB,MAAM8D,MAAMC,eAAe,KAChCjC,cAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,KAAOE,EAAG,IAAMD,GAAI,MAEzCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM+C,EACF,cAEInF,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,EAAGE,EAAG,EAAGD,EAAG,GAGrC,OACI,MAAMG,EAAM,uBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,QACLjB,KAAKiB,MAAM8D,MAAMC,eAAe,KAChCjC,cAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,EAAGE,EAAG,EAAGD,EAAG,GAEjCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMgD,EACF,YAAYzD,GAER3B,KAAKa,OAAS,GAEdb,KAAKe,SAAW,IAEhBf,KAAKiB,MAAQ,EACbjB,KAAKmB,QAAS,EAEdnB,KAAKmC,UAAY,CACb,CAAEC,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,IAGxBtC,KAAK8E,SAAW,CAAE1C,EAAG,IAAMC,EAAG,EAAGC,EAAG,GAEpCtC,KAAKoB,KAAO,GACZpB,KAAKqB,KAAO,EACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,EAAG,GAAK,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EAEfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAElB,OAEI,MAAMc,EAAM,CACR,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBAGEE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBP,EAAIQ,SAASC,IACTL,EAAUM,KAAK,GAAGD,SAAUzB,IACxBA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGD,SAAUI,IACxBrD,KAAKa,OAAOF,KAAK0C,GACU,IAAvBrD,KAAKa,OAAOyC,QAAcP,gBAI3CQ,MAAK,KACJvD,KAAKa,OAAO2C,MAAK,CAACC,EAAGC,IACbD,EAAEE,kBAAkB,IAAMD,EAAEC,kBAAkB,GAAW,GACrD,OAKpB,IAAIhC,EAAOW,EAAGD,EAAGD,GAEbpC,KAAKa,OAAOmC,SAASC,IACjBtB,EAAMC,IAAIqB,GACVA,EAAEpB,SAAU,KAGhB7B,KAAK4D,SAAStB,EAAGD,EAAGD,GAEpBpC,KAAKmB,QAAS,EACdnB,KAAK8D,YAGT,OAAOC,GACH/D,KAAKmB,QAAS,EAEdnB,KAAKa,OAAOmC,SAASC,GAAMtB,MAAMqC,OAAOf,KACxCtB,MAAMqC,OAAOhE,KAAK8B,QAGtB,YAEIuC,YAAW,KACY,IAAfrE,KAAKiB,OACLjB,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,EAClC7B,KAAKa,OAAO,GAAGgB,SAAU,EACzB7B,KAAKiB,MAAQ,IAEbjB,KAAKa,OAAOb,KAAKiB,OAAOY,SAAU,EAClC7B,KAAKa,OAAOb,KAAKiB,MAAQ,GAAGY,SAAU,EACtC7B,KAAKiB,UAEW,IAAhBjB,KAAKmB,QAAiBnB,KAAK8D,cAChC9D,KAAKe,UAGZ,SAASuB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKmC,UAAY,CACb,CAAEC,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,GACpB,CAAEF,EAAG,IAAMC,EAAG,EAAGC,EAAG,IAGxBtC,KAAKmC,UAAUa,SAASC,IACpBA,EAAEb,GAAKA,EACPa,EAAEX,GAAKA,EACPW,EAAEZ,GAAKA,KAGX,IAAK,IAAIiC,EAAI,EAAGA,EAAI,EAAGA,IACnBtE,KAAKa,OAAOyD,GAAGV,SAASxB,EAAIpC,KAAKmC,UAAUmC,GAAGlC,EAC9CpC,KAAKa,OAAOyD,GAAGV,SAASvB,EAAIrC,KAAKmC,UAAUmC,GAAGjC,EAC9CrC,KAAKa,OAAOyD,GAAGV,SAAStB,EAAItC,KAAKmC,UAAUmC,GAAGhC,EAGlDtC,KAAK8E,SAAW,CAAExC,IAAGD,IAAGD,KAExBpC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,GAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAKmC,UAAUa,SAASC,IACpBA,EAAEb,GAAKA,EACPa,EAAEX,GAAKA,EACPW,EAAEZ,GAAKA,KAGX,IAAK,IAAIiC,EAAI,EAAGA,EAAI,EAAGA,IACnBtE,KAAKa,OAAOyD,GAAGV,SAASxB,EAAIpC,KAAKmC,UAAUmC,GAAGlC,EAC9CpC,KAAKa,OAAOyD,GAAGV,SAAStB,EAAItC,KAAKmC,UAAUmC,GAAGhC,EAC9CtC,KAAKa,OAAOyD,GAAGV,SAASvB,EAAIrC,KAAKmC,UAAUmC,GAAGjC,EAElDrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,GAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKa,OAAOmC,SAASC,IACjBA,EAAEsB,SAASjC,GAAKA,EAChBW,EAAEsB,SAASlC,GAAKA,EAChBY,EAAEsB,SAASnC,GAAKA,MCpK5B,MAAMiD,EACF,cAEIrF,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,GAAKE,EAAG,EAAGD,GAAI,KAGxC,OACI,MAAMG,EAAM,2BAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,QACLjB,KAAKiB,MAAM8D,MAAMC,eAAe,IAChCjC,cAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAK,EAAG,GAE9BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,GAAKE,EAAG,EAAGD,GAAI,KAEpCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCrEjC,MAAMkD,EACF,YAAY3D,GAER3B,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,EAAG,IAAMD,EAAG,GAExCrC,KAAKoB,KAAO,IACZpB,KAAKqB,KAAO,EACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,EAAG,IAAK,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EACfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAGlB,OACI,MAAMc,EAAM,6BAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAClBU,EAAMqC,OAAOhE,KAAK8B,QAGtB,SAASQ,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,EAAG,IAAMD,EAAG,GAExCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC1FjC,MAAMmD,EACF,YAAY5D,GAER3B,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,EAAG,GAAKD,EAAG,GAEtCrC,KAAKoB,KAAO,IACZpB,KAAKqB,KAAO,IACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,IAAK,IAAK,GAC3CC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EACfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAGlB,OACI,MAAMc,EAAM,6BAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAClBU,EAAMqC,OAAOhE,KAAK8B,QAGtB,SAASQ,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,EAAG,GAAKD,EAAG,GAEtCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC1FjC,MAAMoD,EACF,YAAY7D,GAER3B,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,GAAI,GAAKD,EAAG,GAEvCrC,KAAKoB,KAAO,EACZpB,KAAKqB,KAAO,IACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,IAAK,EAAG,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EACfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAGlB,OACI,MAAMc,EAAM,gCAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAClBU,EAAMqC,OAAOhE,KAAK8B,QAGtB,SAASQ,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,GAAI,GAAKD,EAAG,GAEvCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EAAI,GAC3CtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EAAI,GAC3CtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC1FjC,MAAMqD,EACF,YAAY9D,GAER3B,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,IAAMD,EAAG,GAExCrC,KAAKoB,KAAO,IACZpB,KAAKqB,KAAO,EACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,EAAG,IAAK,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EACfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAGlB,OACI,MAAMc,EAAM,+BAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAClBU,EAAMqC,OAAOhE,KAAK8B,QAGtB,SAASQ,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,IAAMD,EAAG,GAExCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EAAI,GAC3CpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EAAI,GAC3CtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EAAI,GAC3CpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EAAI,GAC3CtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC1FjC,MAAMsD,EACF,YAAY/D,GAER3B,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,IAAMD,EAAG,GAExCrC,KAAKoB,KAAO,IACZpB,KAAKqB,KAAO,EACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,EAAG,IAAK,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EACfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAGlB,OACI,MAAMc,EAAM,gCAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAClBU,EAAMqC,OAAOhE,KAAK8B,QAGtB,SAASQ,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,IAAMD,EAAG,GAExCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC1FjC,MAAMuD,EACF,YAAYhE,GAER3B,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,GAAKD,EAAG,GAEvCrC,KAAKoB,KAAO,IACZpB,KAAKqB,KAAO,EACZrB,KAAKsB,KAAO,EAEZ,MAAMC,EAAW,IAAI,MAAkB,EAAG,IAAK,GACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAChDC,EAAO,IAAI,MAAWH,EAAUC,GACtCE,EAAKkC,SAASvB,GAAK,IACnBX,EAAKkC,SAAStB,GAAK,IACnBZ,EAAKG,SAAU,EACfF,EAAMC,IAAIF,GAEV1B,KAAK8B,OAASJ,EAGlB,OACI,MAAMc,EAAM,+BAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAClBU,EAAMqC,OAAOhE,KAAK8B,QAGtB,SAASQ,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,GAAKD,EAAG,GAEvCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAEtCrC,KAAK8B,OAAO8B,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACvCpC,KAAK8B,OAAO8B,SAAStB,EAAItC,KAAK8E,SAASxC,EACvCtC,KAAK8B,OAAO8B,SAASvB,EAAIrC,KAAK8E,SAASzC,EAAI,IAG/C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC3FjC,MAAMwD,EACF,cAEI5F,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,EAAG,EAAGD,EAAG,GAGxC,OACI,MAAMG,EAAM,wBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,EAAG,EAAGD,EAAG,GAEpCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMyD,EACF,cAEI7F,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAG7C,OACI,MAAMG,EAAM,gCAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAEzCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM0D,EACF,cAEI9F,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,EAAG,IAAMD,EAAG,GAG5C,OACI,MAAMG,EAAM,kCAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,EAAG,IAAMD,EAAG,GAExCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM2D,EACF,cAEI/F,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,GAAKD,EAAG,GAG3C,OACI,MAAMG,EAAM,gCAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,GAAKD,EAAG,GAEvCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM4D,EACF,cAEIhG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,GAAKD,EAAG,GAG3C,OACI,MAAMG,EAAM,yBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,GAAI,GAAKD,EAAG,GAEvCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM6D,EACF,cAEIjG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,GAAKD,EAAG,GAG5C,OACI,MAAMG,EAAM,yBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,GAAKD,EAAG,GAExCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM8D,EACF,cAEIlG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAG7C,OACI,MAAMG,EAAM,yBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAEzCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAM+D,EACF,cAEInG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,EAAG,IAAMD,EAAG,GAG3C,OACI,MAAMG,EAAM,yBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,GAAKE,EAAG,IAAMD,EAAG,GAEvCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMgE,EACF,cAEIpG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,GAAI,IAAMD,EAAG,GAG5C,OACI,MAAMG,EAAM,yBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,GAAI,IAAMD,EAAG,GAExCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMiE,EACF,cAEIrG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAG7C,OACI,MAAMG,EAAM,wBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAEzCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMkE,EACF,cAEItG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,EAAG,GAAKD,EAAG,GAG1C,OACI,MAAMG,EAAM,oBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,IAAME,EAAG,GAAKD,EAAG,GAEtCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMmE,EACF,cAEIvG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,EAAGE,EAAG,GAAKD,EAAG,GAGvC,OACI,MAAMG,EAAM,wBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,EAAGE,EAAG,GAAKD,EAAG,GAEnCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMoE,EACF,cAEIxG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAG7C,OACI,MAAMG,EAAM,yBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,GAAI,IAAME,GAAI,IAAMD,EAAG,GAEzCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GCnEjC,MAAMqE,EACF,cAEIzG,KAAKiB,MAAQ,EAEbjB,KAAK8E,SAAW,CAAE1C,EAAG,EAAGE,EAAG,IAAKD,EAAG,GAGvC,OACI,MAAMG,EAAM,qBAENE,EAAY,IAAIC,EAAA,EAChBC,EAAY,IAAIC,EAAA,EAEtB,OAAO,IAAIC,SAASC,IAChBH,EAAUM,KAAK,GAAGV,SAAYhB,IAC1BA,EAAS2B,UACTT,EAAUU,aAAa5B,GAEvBkB,EAAUQ,KAAK,GAAGV,SAAYa,IAC1BrD,KAAKiB,MAAQoC,EACM,IAAfrD,KAAKiB,OAEL8B,aAOpB,IAAIpB,EAAOW,EAAGD,EAAGD,GACbT,EAAMC,IAAI5B,KAAKiB,OAEfjB,KAAKuE,SAAS,EAAGU,KAAKC,GAAI,GAE1BlF,KAAK4D,SAAStB,EAAGD,EAAGD,GAGxB,OAAOT,GACHA,EAAMqC,OAAOhE,KAAKiB,OAGtB,SAASqB,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAK8E,SAAW,CAAE1C,EAAG,EAAGE,EAAG,IAAKD,EAAG,GAEnCrC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EACnBrC,KAAK8E,SAAS1C,GAAKA,EAEnBpC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,YAAYC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GAC1BpC,KAAK8E,SAAS1C,GAAKA,EACnBpC,KAAK8E,SAASxC,GAAKA,EACnBtC,KAAK8E,SAASzC,GAAKA,EAEnBrC,KAAKiB,MAAM2C,SAASxB,EAAIpC,KAAK8E,SAAS1C,EACtCpC,KAAKiB,MAAM2C,SAAStB,EAAItC,KAAK8E,SAASxC,EACtCtC,KAAKiB,MAAM2C,SAASvB,EAAIrC,KAAK8E,SAASzC,EAG1C,SAASC,EAAI,EAAGD,EAAI,EAAGD,EAAI,GACvBpC,KAAKiB,MAAMsD,SAASjC,GAAKA,EACzBtC,KAAKiB,MAAMsD,SAASlC,GAAKA,EACzBrC,KAAKiB,MAAMsD,SAASnC,GAAKA,GC3CjC,MAAMsE,EACF,YAAY/E,GACR3B,KAAK2G,KAAO,IAAM,IAAI/F,EACtBZ,KAAK4G,MAAQ,IAAM,IAAI/B,EACvB7E,KAAK6G,KAAO,IAAM,IAAI1B,EACtBnF,KAAK8G,MAAQ,IAAM,IAAI1B,EAAMzD,GAC7B3B,KAAK+G,SAAW,IAAM,IAAI1B,EAC1BrF,KAAKgH,WAAa,IAAM,IAAI1B,EAAW3D,GACvC3B,KAAKiH,WAAa,IAAM,IAAI1B,EAAW5D,GACvC3B,KAAKkH,cAAgB,IAAM,IAAI1B,EAAc7D,GAC7C3B,KAAKmH,aAAe,IAAM,IAAI1B,EAAa9D,GAC3C3B,KAAKoH,cAAgB,IAAM,IAAI1B,EAAc/D,GAC7C3B,KAAKqH,aAAe,IAAM,IAAI1B,EAAahE,GAC3C3B,KAAKsH,SAAW,IAAM,IAAI1B,EAC1B5F,KAAKuH,aAAe,IAAM,IAAI1B,EAC9B7F,KAAKwH,eAAiB,IAAM,IAAI1B,EAChC9F,KAAKyH,aAAe,IAAM,IAAI1B,EAC9B/F,KAAK0H,QAAU,IAAM,IAAI1B,EACzBhG,KAAK2H,QAAU,IAAM,IAAI1B,EACzBjG,KAAK4H,QAAU,IAAM,IAAI1B,EACzBlG,KAAK6H,QAAU,IAAM,IAAI1B,EACzBnG,KAAK8H,UAAY,IAAM,IAAI1B,EAC3BpG,KAAK+H,SAAW,IAAM,IAAI1B,EAC1BrG,KAAKgI,KAAO,IAAM,IAAI1B,EACtBtG,KAAKiI,SAAW,IAAM,IAAI1B,EAC1BvG,KAAKkI,QAAU,IAAM,IAAI1B,EACzBxG,KAAKmI,MAAQ,IAAM,IAAI1B,GCrD/B,MAAM2B,EACF,YAAYC,EAAQC,EAAM3G,GACtB3B,KAAKsD,OAAS,GAEd,IAAK,IAAIgB,GAAK,EAAGA,EAAI,GAAIA,IAAK,CAC1B,CACI,MAAMsC,EAAQyB,EAAOzB,QACrBA,EAAM2B,OAAOhF,MAAK,KACdqD,EAAMhF,IAAID,GACV2G,EAAK1G,IAAIgF,GACTA,EAAMhD,SAAa,EAAJU,EAAO,EAAG,MAIjC,CACI,MAAMyC,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,GACb2G,EAAK1G,IAAImF,GACTA,EAASnD,SAAa,EAAJU,EAAO,EAAG,MAGpC,CACI,MAAMyC,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,GACb2G,EAAK1G,IAAImF,GACTA,EAASnD,SAAa,EAAJU,EAAO,EAAG,SAGpC,CACI,MAAMyC,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,GACb2G,EAAK1G,IAAImF,GACTA,EAASnD,SAAa,EAAJU,EAAO,EAAG,OAGpC,CACI,MAAMuC,EAAOwB,EAAOxB,OACpBA,EAAK0B,OAAOhF,MAAK,KACbsD,EAAKjF,IAAID,GACT2G,EAAK1G,IAAIiF,GACTA,EAAKjD,SAAa,EAAJU,GAAQ,KAAM,SAGpC,CACI,MAAMuC,EAAOwB,EAAOxB,OACpBA,EAAK0B,OAAOhF,MAAK,KACbsD,EAAKjF,IAAID,GACT2G,EAAK1G,IAAIiF,GACTA,EAAKjD,SAAa,EAAJU,EAAO,KAAO,UAGpC,CACI,MAAMyC,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,GACboF,EAASnD,SAAa,EAAJU,EAAO,GAAI,KAC7ByC,EAASxC,SAAS,EAAG,EAAGU,KAAKC,SAK7C,MAAMzB,GACFzD,KAAKsD,QAAUG,EAEnB,UACI,OAAOzD,KAAKsD,QAAU,GAE1B,IAAI+E,EAAQC,GACR,CACI,MAAM1B,EAAQyB,EAAOzB,QACrBA,EAAM2B,OAAOhF,MAAK,KACdqD,EAAMhF,IAAID,OACV2G,EAAK1G,IAAIgF,GACTA,EAAMhD,SAAS5D,KAAKsD,OAAQ,EAAG,MAGvC,CACI,MAAMyD,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,OACb2G,EAAK1G,IAAImF,GACTA,EAASnD,SAAS5D,KAAKsD,OAAQ,EAAG,MAG1C,CACI,MAAMyD,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,OACb2G,EAAK1G,IAAImF,GACTA,EAASnD,SAAS5D,KAAKsD,OAAQ,EAAG,SAG1C,CACI,MAAMyD,EAAWsB,EAAOtB,WACxBA,EAASwB,OAAOhF,MAAK,KACjBwD,EAASnF,IAAID,OACb2G,EAAK1G,IAAImF,GACTA,EAASnD,SAAS5D,KAAKsD,OAAQ,EAAG,OAG1C,CACI,MAAMuD,EAAOwB,EAAOxB,OACpBA,EAAK0B,OAAOhF,MAAK,KACbsD,EAAKjF,IAAID,OACT2G,EAAK1G,IAAIiF,GACTA,EAAKjD,SAAS5D,KAAKsD,QAAS,KAAM,SAG1C,CACI,MAAMuD,EAAOwB,EAAOxB,OACpBA,EAAK0B,OAAOhF,MAAK,KACbsD,EAAKjF,IAAID,OACT2G,EAAK1G,IAAIiF,GACTA,EAAKjD,SAAS5D,KAAKsD,OAAQ,KAAO,UAG1CtD,KAAKsD,QAAU,GCvHvB,MAAMkF,EACF,YAAYH,EAAQC,EAAM3G,GACtB3B,KAAKyI,IAAM,CAAC,YAAa,WAAY,WAAY,QAAS,aAAc,gBAAiB,eAAgB,gBAAiB,gBAE1HzI,KAAK0I,IAAM,CAAC,WAAY,OAAQ,YAAa,QAAS,aAAc,aAAc,gBAAiB,eAAgB,gBAAiB,gBAEpI1I,KAAK2I,IAAM,CAAC,eAAgB,iBAAkB,eAAgB,UAAW,UAAW,UAAW,UAAW,YAAa,WAAY,WAEnI3I,KAAK4I,IAAM,CAAC,eAAgB,iBAAkB,eAAgB,UAAW,UAAW,UAAW,WAC9F,MACG,IAAIC,EACJ,IAAK,IAAIvE,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAE7B,GADAuE,EAAO7I,KAAKyI,IAAIxD,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAKyI,IAAInF,SACvC,UAATuF,EAAkB,CAClB,MAAMV,EAAQE,EAAOF,QACrBA,EAAMI,OAAOhF,MAAK,KACd4E,EAAMlH,MAAM8D,MAAMC,eAAe,IACjCmD,EAAM5D,SAAUU,KAAKC,GAAK,EAAK,EAAG,EAAID,KAAKC,GAAK,EAAK,IAErDiD,EAAMvG,IAAID,GACVwG,EAAMvE,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,GAAI,IACxCR,EAAK1G,IAAIuG,MAGjB,GAAa,cAATU,EAAsB,CACtB,MAAMf,EAAYO,EAAOP,YACzBA,EAAUS,OAAOhF,MAAK,KAClBuE,EAAUvD,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAEzC4C,EAAUlG,IAAID,GACdmG,EAAUlE,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,GAAI,IAC5CR,EAAK1G,IAAIkG,MAGjB,GAAa,aAATe,EAAqB,CACrB,MAAMd,EAAWM,EAAON,WACxBA,EAASQ,OAAOhF,MAAK,KACjBwE,EAASxD,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAExC6C,EAASnG,IAAID,GACboG,EAASnE,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,GAAI,IAC3CR,EAAK1G,IAAImG,MAGjB,GAAa,aAATc,EAAqB,CACrB,MAAMZ,EAAWI,EAAOJ,WACxBA,EAASM,OAAOhF,MAAK,KACjB0E,EAAS1D,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAExC+C,EAASrG,IAAID,GACbsG,EAASrE,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,IAAK,IAC5CR,EAAK1G,IAAIqG,MAGjB,GAAa,eAATY,EAAuB,CACvB,MAAM7B,EAAaqB,EAAOrB,aAC1BA,EAAWuB,OAAOhF,MAAK,KACnByD,EAAWzC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C8B,EAAWpF,IAAID,GACfqF,EAAWpD,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,IAAK,IAC9CR,EAAK1G,IAAIoF,MAGjB,GAAa,kBAAT6B,EAA0B,CAC1B,MAAM3B,EAAgBmB,EAAOnB,gBAC7BA,EAAcqB,OAAOhF,MAAK,KACtB2D,EAAc3C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CgC,EAActF,IAAID,GAClBuF,EAActD,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,IAAK,IACjDR,EAAK1G,IAAIsF,MAGjB,GAAa,iBAAT2B,EAAyB,CACzB,MAAM1B,EAAekB,EAAOlB,eAC5BA,EAAaoB,OAAOhF,MAAK,KACrB4D,EAAa5C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CiC,EAAavF,IAAID,GACjBwF,EAAavD,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,IAAK,IAChDR,EAAK1G,IAAIuF,MAGjB,GAAa,kBAAT0B,EAA0B,CAC1B,MAAMzB,EAAgBiB,EAAOjB,gBAC7BA,EAAcmB,OAAOhF,MAAK,KACtB6D,EAAc7C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CkC,EAAcxF,IAAID,GAClByF,EAAcxD,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,GAAI,IAChDR,EAAK1G,IAAIwF,MAGjB,GAAa,iBAATyB,EAAyB,CACzB,MAAMxB,EAAegB,EAAOhB,eAC5BA,EAAakB,OAAOhF,MAAK,KACrB8D,EAAa9C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CmC,EAAazF,IAAID,GACjB0F,EAAazD,SAASU,EAAG,GAAKtE,KAAK8I,QAAQ,IAAK,IAChDR,EAAK1G,IAAIyF,MAIjB,GADAwB,EAAO7I,KAAK0I,IAAIzD,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAK0I,IAAIpF,SACvC,aAATuF,EAAqB,CACrB,MAAMvB,EAAWe,EAAOf,WACxBA,EAASiB,OAAOhF,MAAK,KACjB+D,EAAS/C,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAEzCoC,EAAS1F,IAAID,GACb2F,EAAS1D,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC1CR,EAAK1G,IAAI0F,MAGjB,GAAa,SAATuB,EAAiB,CACjB,MAAMb,EAAOK,EAAOL,OACpBA,EAAKO,OAAOhF,MAAK,KACbyE,EAAKzD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAErC8C,EAAKpG,IAAID,GACTqG,EAAKpE,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KACtCR,EAAK1G,IAAIoG,MAGjB,GAAa,cAATa,EAAsB,CACtB,MAAMf,EAAYO,EAAOP,YACzBA,EAAUS,OAAOhF,MAAK,KAClBuE,EAAUvD,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAEzC4C,EAAUlG,IAAID,GACdmG,EAAUlE,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC3CR,EAAK1G,IAAIkG,MAGjB,GAAa,UAATe,EAAkB,CAClB,MAAMV,EAAQE,EAAOF,QACrBA,EAAMI,OAAOhF,MAAK,KACd4E,EAAMlH,MAAM8D,MAAMC,eAAe,IACjCmD,EAAM5D,SAAUU,KAAKC,GAAK,EAAK,EAAG,EAAID,KAAKC,GAAK,EAAK,IAErDiD,EAAMvG,IAAID,GACVwG,EAAMvE,SAASU,EAAG,IAAKtE,KAAK8I,QAAQ,IAAK,KACzCR,EAAK1G,IAAIuG,MAGjB,GAAa,eAATU,EAAuB,CACvB,MAAM7B,EAAaqB,EAAOrB,aAC1BA,EAAWuB,OAAOhF,MAAK,KACnByD,EAAWzC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C8B,EAAWpF,IAAID,GACfqF,EAAWpD,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC5CR,EAAK1G,IAAIoF,MAGjB,GAAa,kBAAT6B,EAA0B,CAC1B,MAAM3B,EAAgBmB,EAAOnB,gBAC7BA,EAAcqB,OAAOhF,MAAK,KACtB2D,EAAc3C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CgC,EAActF,IAAID,GAClBuF,EAActD,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC/CR,EAAK1G,IAAIsF,MAGjB,GAAa,iBAAT2B,EAAyB,CACzB,MAAM1B,EAAekB,EAAOlB,eAC5BA,EAAaoB,OAAOhF,MAAK,KACrB4D,EAAa5C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CiC,EAAavF,IAAID,GACjBwF,EAAavD,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC9CR,EAAK1G,IAAIuF,MAGjB,GAAa,kBAAT0B,EAA0B,CAC1B,MAAMzB,EAAgBiB,EAAOjB,gBAC7BA,EAAcmB,OAAOhF,MAAK,KACtB6D,EAAc7C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CkC,EAAcxF,IAAID,GAClByF,EAAcxD,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC/CR,EAAK1G,IAAIwF,MAGjB,GAAa,iBAATyB,EAAyB,CACzB,MAAMxB,EAAegB,EAAOhB,eAC5BA,EAAakB,OAAOhF,MAAK,KACrB8D,EAAa9C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CmC,EAAazF,IAAID,GACjB0F,EAAazD,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC9CR,EAAK1G,IAAIyF,MAGjB,GAAa,eAATwB,EAAuB,CACvB,MAAM5B,EAAaoB,EAAOpB,aAC1BA,EAAWsB,OAAOhF,MAAK,KACnB0D,EAAW1C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C+B,EAAWrF,IAAID,GACfsF,EAAWrD,SAASU,EAAG,EAAGtE,KAAK8I,QAAQ,IAAK,KAC5CR,EAAK1G,IAAIqF,SAlMxB,GAyML,IAAIoB,EAAQC,EAAM3G,GACd3B,KAAK+I,SAASV,EAAQC,EAAM3G,GAC5B3B,KAAKgJ,SAASX,EAAQC,EAAM3G,GAC5B3B,KAAKiJ,SAASZ,EAAQC,EAAM3G,GAC5B3B,KAAKkJ,SAASb,EAAQC,EAAM3G,GAGhC,OAAOwH,EAAKC,GACR,OAAOnE,KAAK2B,MAAM3B,KAAK6D,UAAYM,EAAMD,EAAM,GAAKA,GAExD,SAASd,EAAQC,EAAM3G,GACnB3B,KAAKqJ,KAAOhF,YAAW,KACnB,IAAIwE,EAAO7I,KAAKyI,IAAIxD,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAKyI,IAAInF,SACxD,GAAa,UAATuF,EAAkB,CAClB,MAAMV,EAAQE,EAAOF,QACrBA,EAAMI,OAAOhF,MAAK,KACd4E,EAAMlH,MAAM8D,MAAMC,eAAe,IACjCmD,EAAM5D,SAAUU,KAAKC,GAAK,EAAK,EAAG,EAAID,KAAKC,GAAK,EAAK,IAErDiD,EAAMvG,IAAID,GACVwG,EAAMvE,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,GAAI,IACzCR,EAAK1G,IAAIuG,MAGjB,GAAa,cAATU,EAAsB,CACtB,MAAMf,EAAYO,EAAOP,YACzBA,EAAUS,OAAOhF,MAAK,KAClBuE,EAAUvD,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAEzC4C,EAAUlG,IAAID,GACdmG,EAAUlE,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,GAAI,IAC7CR,EAAK1G,IAAIkG,MAGjB,GAAa,aAATe,EAAqB,CACrB,MAAMd,EAAWM,EAAON,WACxBA,EAASQ,OAAOhF,MAAK,KACjBwE,EAASxD,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAExC6C,EAASnG,IAAID,GACboG,EAASnE,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,GAAI,IAC5CR,EAAK1G,IAAImG,MAGjB,GAAa,aAATc,EAAqB,CACrB,MAAMZ,EAAWI,EAAOJ,WACxBA,EAASM,OAAOhF,MAAK,KACjB0E,EAAS1D,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAExC+C,EAASrG,IAAID,GACbsG,EAASrE,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,IAAK,IAC7CR,EAAK1G,IAAIqG,MAGjB,GAAa,eAATY,EAAuB,CACvB,MAAM7B,EAAaqB,EAAOrB,aAC1BA,EAAWuB,OAAOhF,MAAK,KACnByD,EAAWzC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C8B,EAAWpF,IAAID,GACfqF,EAAWpD,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,IAAK,IAC/CR,EAAK1G,IAAIoF,MAGjB,GAAa,kBAAT6B,EAA0B,CAC1B,MAAM3B,EAAgBmB,EAAOnB,gBAC7BA,EAAcqB,OAAOhF,MAAK,KACtB2D,EAAc3C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CgC,EAActF,IAAID,GAClBuF,EAActD,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,IAAK,IAClDR,EAAK1G,IAAIsF,MAGjB,GAAa,iBAAT2B,EAAyB,CACzB,MAAM1B,EAAekB,EAAOlB,eAC5BA,EAAaoB,OAAOhF,MAAK,KACrB4D,EAAa5C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CiC,EAAavF,IAAID,GACjBwF,EAAavD,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,IAAK,IACjDR,EAAK1G,IAAIuF,MAGjB,GAAa,kBAAT0B,EAA0B,CAC1B,MAAMzB,EAAgBiB,EAAOjB,gBAC7BA,EAAcmB,OAAOhF,MAAK,KACtB6D,EAAc7C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CkC,EAAcxF,IAAID,GAClByF,EAAcxD,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,GAAI,IACjDR,EAAK1G,IAAIwF,MAGjB,GAAa,iBAATyB,EAAyB,CACzB,MAAMxB,EAAegB,EAAOhB,eAC5BA,EAAakB,OAAOhF,MAAK,KACrB8D,EAAa9C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CmC,EAAazF,IAAID,GACjB0F,EAAazD,SAAS,GAAI,GAAK5D,KAAK8I,QAAQ,IAAK,IACjDR,EAAK1G,IAAIyF,SAGlBrH,KAAK8I,OAAO,KAAM,MAEzB,SAAST,EAAQC,EAAM3G,GACnB3B,KAAKsJ,KAAOjF,YAAW,KACnB,IAAIwE,EAAO7I,KAAK0I,IAAIzD,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAK0I,IAAIpF,SACxD,GAAa,aAATuF,EAAqB,CACrB,MAAMvB,EAAWe,EAAOf,WACxBA,EAASiB,OAAOhF,MAAK,KACjB+D,EAAS/C,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAEzCoC,EAAS1F,IAAID,GACb2F,EAAS1D,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAC3CR,EAAK1G,IAAI0F,MAGjB,GAAa,SAATuB,EAAiB,CACjB,MAAMb,EAAOK,EAAOL,OACpBA,EAAKO,OAAOhF,MAAK,KACbyE,EAAKzD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAErC8C,EAAKpG,IAAID,GACTqG,EAAKpE,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KACvCR,EAAK1G,IAAIoG,MAGjB,GAAa,cAATa,EAAsB,CACtB,MAAMf,EAAYO,EAAOP,YACzBA,EAAUS,OAAOhF,MAAK,KAClBuE,EAAUvD,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAEzC4C,EAAUlG,IAAID,GACdmG,EAAUlE,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAC5CR,EAAK1G,IAAIkG,MAGjB,GAAa,UAATe,EAAkB,CAClB,MAAMV,EAAQE,EAAOF,QACrBA,EAAMI,OAAOhF,MAAK,KACd4E,EAAMlH,MAAM8D,MAAMC,eAAe,IACjCmD,EAAM5D,SAAUU,KAAKC,GAAK,EAAK,EAAG,EAAID,KAAKC,GAAK,EAAK,IAErDiD,EAAMvG,IAAID,GACVwG,EAAMvE,SAAS,GAAI,IAAK5D,KAAK8I,QAAQ,IAAK,KAC1CR,EAAK1G,IAAIuG,MAGjB,GAAa,eAATU,EAAuB,CACvB,MAAM7B,EAAaqB,EAAOrB,aAC1BA,EAAWuB,OAAOhF,MAAK,KACnByD,EAAWzC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C8B,EAAWpF,IAAID,GACfqF,EAAWpD,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAC7CR,EAAK1G,IAAIoF,MAGjB,GAAa,kBAAT6B,EAA0B,CAC1B,MAAM3B,EAAgBmB,EAAOnB,gBAC7BA,EAAcqB,OAAOhF,MAAK,KACtB2D,EAAc3C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CgC,EAActF,IAAID,GAClBuF,EAActD,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAChDR,EAAK1G,IAAIsF,MAGjB,GAAa,iBAAT2B,EAAyB,CACzB,MAAM1B,EAAekB,EAAOlB,eAC5BA,EAAaoB,OAAOhF,MAAK,KACrB4D,EAAa5C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CiC,EAAavF,IAAID,GACjBwF,EAAavD,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAC/CR,EAAK1G,IAAIuF,MAGjB,GAAa,kBAAT0B,EAA0B,CAC1B,MAAMzB,EAAgBiB,EAAOjB,gBAC7BA,EAAcmB,OAAOhF,MAAK,KACtB6D,EAAc7C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CkC,EAAcxF,IAAID,GAClByF,EAAcxD,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAChDR,EAAK1G,IAAIwF,MAGjB,GAAa,iBAATyB,EAAyB,CACzB,MAAMxB,EAAegB,EAAOhB,eAC5BA,EAAakB,OAAOhF,MAAK,KACrB8D,EAAa9C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CmC,EAAazF,IAAID,GACjB0F,EAAazD,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAC/CR,EAAK1G,IAAIyF,MAGjB,GAAa,eAATwB,EAAuB,CACvB,MAAM5B,EAAaoB,EAAOpB,aAC1BA,EAAWsB,OAAOhF,MAAK,KACnB0D,EAAW1C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C+B,EAAWrF,IAAID,GACfsF,EAAWrD,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,IAAK,KAC7CR,EAAK1G,IAAIqF,SAGlBjH,KAAK8I,OAAO,KAAM,MAEzB,SAAST,EAAQC,EAAM3G,GACnB3B,KAAKuJ,KAAOlF,YAAW,KACnB,IAAIwE,EAAO7I,KAAK2I,IAAI1D,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAK2I,IAAIrF,SACxD,GAAa,iBAATuF,EAAyB,CACzB,MAAMtB,EAAec,EAAOd,eAC5BA,EAAagB,OAAOhF,MAAK,KACrBgE,EAAahD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE7CqC,EAAa3F,IAAID,GACjB4F,EAAa3D,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IAC7CR,EAAK1G,IAAI2F,MAGjB,GAAa,mBAATsB,EAA2B,CAC3B,MAAMrB,EAAiBa,EAAOb,iBAC9BA,EAAee,OAAOhF,MAAK,KACvBiE,EAAejD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE/CsC,EAAe5F,IAAID,GACnB6F,EAAe5D,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IAC/CR,EAAK1G,IAAI4F,MAGjB,GAAa,iBAATqB,EAAyB,CACzB,MAAMpB,EAAeY,EAAOZ,eAC5BA,EAAac,OAAOhF,MAAK,KACrBkE,EAAalD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE7CuC,EAAa7F,IAAID,GACjB8F,EAAa7D,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IAC7CR,EAAK1G,IAAI6F,MAGjB,GAAa,YAAToB,EAAoB,CACpB,MAAMnB,EAAUW,EAAOX,UACvBA,EAAQa,OAAOhF,MAAK,KAChBmE,EAAQnD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExCwC,EAAQ9F,IAAID,GACZ+F,EAAQ9D,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IACxCR,EAAK1G,IAAI8F,MAGjB,GAAa,YAATmB,EAAoB,CACpB,MAAMlB,EAAUU,EAAOV,UACvBA,EAAQY,OAAOhF,MAAK,KAChBoE,EAAQpD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExCyC,EAAQ/F,IAAID,GACZgG,EAAQ/D,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IACxCR,EAAK1G,IAAI+F,MAGjB,GAAa,YAATkB,EAAoB,CACpB,MAAMjB,EAAUS,EAAOT,UACvBA,EAAQW,OAAOhF,MAAK,KAChBqE,EAAQrD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExC0C,EAAQhG,IAAID,GACZiG,EAAQhE,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IACxCR,EAAK1G,IAAIgG,MAGjB,GAAa,YAATiB,EAAoB,CACpB,MAAMhB,EAAUQ,EAAOR,UACvBA,EAAQU,OAAOhF,MAAK,KAChBsE,EAAQtD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExC2C,EAAQjG,IAAID,GACZkG,EAAQjE,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IACxCR,EAAK1G,IAAIiG,MAGjB,GAAa,cAATgB,EAAsB,CACtB,MAAMf,EAAYO,EAAOP,YACzBA,EAAUS,OAAOhF,MAAK,KAClBuE,EAAUvD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE1C4C,EAAUlG,IAAID,GACdmG,EAAUlE,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IAC1CR,EAAK1G,IAAIkG,MAGjB,GAAa,aAATe,EAAqB,CACrB,MAAMZ,EAAWI,EAAOJ,WACxBA,EAASM,OAAOhF,MAAK,KACjB0E,EAAS1D,SAAS,EAAGvE,KAAK8I,OAAO,EAAG,GAAI,GAExCb,EAASrG,IAAID,GACbsG,EAASrE,SAAS,IAAK,EAAG5D,KAAK8I,OAAO,EAAG,IACzCR,EAAK1G,IAAIqG,MAGjB,GAAa,YAATY,EAAoB,CACpB,MAAMX,EAAUG,EAAOH,UACvBA,EAAQK,OAAOhF,MAAK,KAChB2E,EAAQ3D,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAEvCgD,EAAQtG,IAAID,GACZuG,EAAQtE,SAAS,IAAK,EAAG5D,KAAK8I,QAAQ,GAAI,IAC1CR,EAAK1G,IAAIsG,SAGlBlI,KAAK8I,OAAO,IAAM,MAEzB,SAAST,EAAQC,EAAM3G,GACnB3B,KAAKwJ,KAAOnF,YAAW,KACnB,IAAIwE,EAAO7I,KAAK4I,IAAI3D,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAK4I,IAAItF,SACxD,GAAa,iBAATuF,EAAyB,CACzB,MAAMtB,EAAec,EAAOd,eAC5BA,EAAagB,OAAOhF,MAAK,KACrBgE,EAAahD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE7CqC,EAAa3F,IAAID,GACjB4F,EAAa3D,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IAC7CR,EAAK1G,IAAI2F,MAGjB,GAAa,mBAATsB,EAA2B,CAC3B,MAAMrB,EAAiBa,EAAOb,iBAC9BA,EAAee,OAAOhF,MAAK,KACvBiE,EAAejD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE/CsC,EAAe5F,IAAID,GACnB6F,EAAe5D,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IAC/CR,EAAK1G,IAAI4F,MAGjB,GAAa,iBAATqB,EAAyB,CACzB,MAAMpB,EAAeY,EAAOZ,eAC5BA,EAAac,OAAOhF,MAAK,KACrBkE,EAAalD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAE7CuC,EAAa7F,IAAID,GACjB8F,EAAa7D,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IAC7CR,EAAK1G,IAAI6F,MAGjB,GAAa,YAAToB,EAAoB,CACpB,MAAMnB,EAAUW,EAAOX,UACvBA,EAAQa,OAAOhF,MAAK,KAChBmE,EAAQnD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExCwC,EAAQ9F,IAAID,GACZ+F,EAAQ9D,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IACxCR,EAAK1G,IAAI8F,MAGjB,GAAa,YAATmB,EAAoB,CACpB,MAAMlB,EAAUU,EAAOV,UACvBA,EAAQY,OAAOhF,MAAK,KAChBoE,EAAQpD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExCyC,EAAQ/F,IAAID,GACZgG,EAAQ/D,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IACxCR,EAAK1G,IAAI+F,MAGjB,GAAa,YAATkB,EAAoB,CACpB,MAAMjB,EAAUS,EAAOT,UACvBA,EAAQW,OAAOhF,MAAK,KAChBqE,EAAQrD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExC0C,EAAQhG,IAAID,GACZiG,EAAQhE,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IACxCR,EAAK1G,IAAIgG,MAGjB,GAAa,YAATiB,EAAoB,CACpB,MAAMhB,EAAUQ,EAAOR,UACvBA,EAAQU,OAAOhF,MAAK,KAChBsE,EAAQtD,SAAS,GAAKU,KAAKC,GAAK,EAAK,EAAG,GAExC2C,EAAQjG,IAAID,GACZkG,EAAQjE,SAAS,GAAI,EAAG5D,KAAK8I,QAAQ,EAAG,IACxCR,EAAK1G,IAAIiG,SAGlB7H,KAAK8I,OAAO,IAAM,OCxlB7B,MAAMW,EACF,YAAYpB,EAAQC,EAAM3G,GACtB3B,KAAK0J,WAAa,CAAC,QAAS,aAAc,aAAc,gBAAiB,eAAgB,gBAAiB,gBAC1G,IAAK,IAAIpF,EAAI,GAAIA,EAAI,GAAIA,GAAK,GAAI,CAC9B,IAAIuE,EAAO7I,KAAK0J,WAAWzE,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAK0J,WAAWpG,SACtE,GAAa,eAATuF,EAAuB,CACvB,MAAM7B,EAAaqB,EAAOrB,aAC1BA,EAAWuB,OAAOhF,MAAK,KACnByD,EAAWzC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C8B,EAAWpF,IAAID,GACfqF,EAAWpD,SAASU,EAAG,EAAG,GAC1BgE,EAAK1G,IAAIoF,MAGjB,GAAa,kBAAT6B,EAA0B,CAC1B,MAAM3B,EAAgBmB,EAAOnB,gBAC7BA,EAAcqB,OAAOhF,MAAK,KACtB2D,EAAc3C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CgC,EAActF,IAAID,GAClBuF,EAActD,SAASU,EAAG,EAAG,GAC7BgE,EAAK1G,IAAIsF,MAGjB,GAAa,iBAAT2B,EAAyB,CACzB,MAAM1B,EAAekB,EAAOlB,eAC5BA,EAAaoB,OAAOhF,MAAK,KACrB4D,EAAa5C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CiC,EAAavF,IAAID,GACjBwF,EAAavD,SAASU,EAAG,EAAG,GAC5BgE,EAAK1G,IAAIuF,MAGjB,GAAa,kBAAT0B,EAA0B,CAC1B,MAAMzB,EAAgBiB,EAAOjB,gBAC7BA,EAAcmB,OAAOhF,MAAK,KACtB6D,EAAc7C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CkC,EAAcxF,IAAID,GAClByF,EAAcxD,SAASU,EAAG,EAAG,GAC7BgE,EAAK1G,IAAIwF,MAGjB,GAAa,iBAATyB,EAAyB,CACzB,MAAMxB,EAAegB,EAAOhB,eAC5BA,EAAakB,OAAOhF,MAAK,KACrB8D,EAAa9C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CmC,EAAazF,IAAID,GACjB0F,EAAazD,SAASU,EAAG,EAAG,IAC5BgE,EAAK1G,IAAIyF,MAGjB,GAAa,eAATwB,EAAuB,CACvB,MAAM5B,EAAaoB,EAAOpB,aAC1BA,EAAWsB,OAAOhF,MAAK,KACnB0D,EAAW1C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C+B,EAAWrF,IAAID,GACfsF,EAAWrD,SAASU,EAAG,EAAG,GAC1BgE,EAAK1G,IAAIqF,MAGjB,GAAa,UAAT4B,EAAkB,CAClB,MAAM/B,EAAQuB,EAAOvB,QACrBA,EAAMyB,OAAOhF,MAAK,KACduD,EAAMvC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAErC4B,EAAMlF,IAAID,GACVmF,EAAMlD,SAASU,EAFL,CAAC,EAAG,IAAK,GAEGtE,KAAK8I,OAAO,EAAG,IAAK,GAC1CR,EAAK1G,IAAIkF,QAKzB,OAAOqC,EAAKC,GACR,OAAOnE,KAAK2B,MAAM3B,KAAK6D,UAAYM,EAAMD,EAAM,GAAKA,GAExD,IAAId,EAAQC,EAAM3G,GACd,IAAIkH,EAAO7I,KAAK0J,WAAWzE,KAAK2B,MAAM3B,KAAK6D,SAAW9I,KAAK0J,WAAWpG,SACtE,GAAa,eAATuF,EAAuB,CACvB,MAAM7B,EAAaqB,EAAOrB,aAC1BA,EAAWuB,OAAOhF,MAAK,KACnByD,EAAWzC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C8B,EAAWpF,IAAID,GACfqF,EAAWpD,SAAS,GAAI,EAAG,GAC3B0E,EAAK1G,IAAIoF,MAGjB,GAAa,kBAAT6B,EAA0B,CAC1B,MAAM3B,EAAgBmB,EAAOnB,gBAC7BA,EAAcqB,OAAOhF,MAAK,KACtB2D,EAAc3C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CgC,EAActF,IAAID,GAClBuF,EAActD,SAAS,GAAI,EAAG,GAC9B0E,EAAK1G,IAAIsF,MAGjB,GAAa,iBAAT2B,EAAyB,CACzB,MAAM1B,EAAekB,EAAOlB,eAC5BA,EAAaoB,OAAOhF,MAAK,KACrB4D,EAAa5C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CiC,EAAavF,IAAID,GACjBwF,EAAavD,SAAS,GAAI,EAAG,GAC7B0E,EAAK1G,IAAIuF,MAGjB,GAAa,kBAAT0B,EAA0B,CAC1B,MAAMzB,EAAgBiB,EAAOjB,gBAC7BA,EAAcmB,OAAOhF,MAAK,KACtB6D,EAAc7C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE7CkC,EAAcxF,IAAID,GAClByF,EAAcxD,SAAS,GAAI,EAAG,GAC9B0E,EAAK1G,IAAIwF,MAGjB,GAAa,iBAATyB,EAAyB,CACzB,MAAMxB,EAAegB,EAAOhB,eAC5BA,EAAakB,OAAOhF,MAAK,KACrB8D,EAAa9C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE5CmC,EAAazF,IAAID,GACjB0F,EAAazD,SAAS,GAAI,EAAG,IAC7B0E,EAAK1G,IAAIyF,MAGjB,GAAa,eAATwB,EAAuB,CACvB,MAAM5B,EAAaoB,EAAOpB,aAC1BA,EAAWsB,OAAOhF,MAAK,KACnB0D,EAAW1C,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAE1C+B,EAAWrF,IAAID,GACfsF,EAAWrD,SAAS,GAAI,EAAG,GAC3B0E,EAAK1G,IAAIqF,MAGjB,GAAa,UAAT4B,EAAkB,CAClB,MAAM/B,EAAQuB,EAAOvB,QACrBA,EAAMyB,OAAOhF,MAAK,KACduD,EAAMvC,SAAS,EAAIU,KAAKC,GAAK,EAAK,EAAG,GAErC4B,EAAMlF,IAAID,GACVmF,EAAMlD,SAAS,GAFL,CAAC,EAAG,IAAK,GAEI5D,KAAK8I,OAAO,EAAG,IAAK,GAC3CR,EAAK1G,IAAIkF,Q,OC3IzB,IAAI6C,EAAO1F,SAAS2F,eAAe,QAC/BC,EAAU5F,SAAS2F,eAAe,SAetC,SAASE,IAEL,MAAMnI,EAAQ,IAAI,MACZoI,EAAS,IAAI,MAAwB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAE5F,IAAI7B,EAAS,IAAI3B,EAAO/E,GAGxB,MAAMwI,EAAW,IAAI,MACrBA,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3CjG,SAASoG,KAAKC,YAAYH,EAASI,YAEnCJ,EAASK,cAAc,QAAU,GACjC,CACI,MAAM/I,EAAQ,QACRgJ,EAAU,IAChB9I,EAAM+I,IAAM,IAAI,MAAcjJ,EAAOgJ,GAIzC,MAAMnC,EAAO,IAAIvI,EACX4K,EAAa,IAAIvC,EAAUC,EAAQC,EAAM3G,GACzCiJ,EAAW,IAAIpC,EAASH,EAAQC,EAAM3G,GACtCkJ,EAAa,IAAIpB,EAAWpB,EAAQC,EAAM3G,GAEhD,IAAImJ,GAAM,EACNC,EAAQ,IACRC,EAAQ,EAEZhB,OAAOrI,MAAQA,EACfqI,OAAOD,OAASA,EAkBhBA,EAAOnG,SAAStB,GAAK,mBACrByH,EAAOnG,SAASvB,EAAI,kBACpB0H,EAAOnG,SAASxB,EAAI,mBAEpB2H,EAAOxF,SAASjC,GAAK,kBACrByH,EAAOxF,SAASlC,GAAK,kBACrB0H,EAAOxF,SAASnC,GAAK,kBAGrB4H,OAAO9F,iBAAiB,UAExB,WACI6F,EAAOkB,OAASjB,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOmB,yBAEPf,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,gBANG,GAUlD,CACI,MAAMzI,EAAQ,SACR0J,EAAY,EACZC,EAAQ,IAAI,MAAmB3J,EAAO0J,GAC5CxJ,EAAMC,IAAIwJ,GAEd,CACI,MAAM3J,EAAQ,SACR0J,EAAY,GACZC,EAAQ,IAAI,MAAuB3J,EAAO0J,GAChDC,EAAMxH,SAASyH,KAAK,IAAK,IAAK,GAC9BD,EAAME,OAAO1H,SAASyH,KAAK,EAAG,EAAG,GACjC1J,EAAMC,IAAIwJ,GACVzJ,EAAMC,IAAIwJ,EAAME,QAOpB,MAAM3E,EAAO0B,EAAO1B,OACpBA,EAAK4B,OAAOhF,MAAK,KACboD,EAAK/E,IAAID,MAEbqI,OAAOrD,KAAOA,EAEd,CACI,MAAMpF,EAAW,IAAI,MAAkB,IAAK,EAAG,KACzCC,EAAW,IAAI,MAAwB,CAAEC,MAAO,QAAU8J,QAAS,GAAKC,aAAa,IACrFC,EAAQ,IAAI,MAAWlK,EAAUC,GACvCG,EAAMC,IAAI6J,GACVA,EAAM7H,SAAStB,EAAI,KACnBmJ,EAAM7H,SAASxB,GAAK,MACpBqJ,EAAM7H,SAASvB,GAAK,IAEpB2H,OAAOyB,MAAQA,EAInB,IAAIC,EAAQC,EAERC,EAAgBlH,aAAY,KAC5BmF,EAAQgC,UACG,IAAIC,OAAO7G,KAAK8G,IAAI9G,KAAK2B,MAAMoE,GAAOgB,WAAW1I,OAAS,IAAM2B,KAAK2B,MAAMoE,KAGvF,KAEH,MAAMiB,EAAU,WACZ9B,EAAS+B,OAAOvK,EAAOoI,GAEvBzB,EAAK6D,MAAMnJ,SAASC,IAChBA,EAAE,GAAG2B,aAAamG,EAAO,EAAG,GACxB9H,EAAE,GAAG6B,SAASxC,GAAK,KACnBW,EAAE,GAAGe,OAAOrC,GACZ2G,EAAK8D,OAAOnJ,EAAE,QAItBqF,EAAK6D,MAAMnJ,SAASC,IACZA,EAAE,GAAGnB,QACJ,MACG,IAKIuK,EAAUC,EAAUC,EAAWC,EAL/BC,EAAQxJ,EAAE,GACVyJ,EAAW,CAACD,EAAM3K,OAAO8B,SAASvB,EAAGoK,EAAM3K,OAAO8B,SAAStB,EAAImK,EAAMpL,KAAO,GAC5EsL,EAAW,CAACF,EAAM3K,OAAO8B,SAASvB,EAAIoK,EAAMrL,KAAO,EAAGqL,EAAM3K,OAAO8B,SAAStB,EAAImK,EAAMpL,KAAO,GAC7FuL,EAAY,CAACH,EAAM3K,OAAO8B,SAASvB,EAAIoK,EAAMrL,KAAO,EAAGqL,EAAM3K,OAAO8B,SAAStB,EAAImK,EAAMpL,KAAO,GAI9FsF,EAAKzF,KACLmL,EAAW1F,EAAKzE,QAAQ0B,SAASvB,EAAIsE,EAAK5E,MAAQ,EAClDuK,EAAW3F,EAAKzE,QAAQ0B,SAASvB,EAAIsE,EAAK5E,MAAQ,EAClDwK,EAAY5F,EAAKzE,QAAQ0B,SAAStB,EAAIqE,EAAK3E,MAAQ,EACnDwK,EAAa7F,EAAKzE,QAAQ0B,SAAStB,EAAIqE,EAAK3E,MAAQ,IAEpDqK,EAAW1F,EAAK7E,OAAO8B,SAASvB,EAAIsE,EAAKvF,KAAO,EAChDkL,EAAW3F,EAAK7E,OAAO8B,SAASvB,EAAIsE,EAAKvF,KAAO,EAChDmL,EAAY5F,EAAK7E,OAAO8B,SAAStB,EAAIqE,EAAKtF,KAAO,EACjDmL,EAAa7F,EAAK7E,OAAO8B,SAAStB,EAAIqE,EAAKtF,KAAO,IAGlDqL,EAAS,IAAMJ,GAAYI,EAAS,IAAML,GAAYK,EAAS,IAAMH,GAAaG,EAAS,IAAMF,GAAcC,EAAM3K,OAAO8B,SAASxB,GAAK,GAEnIuK,EAAS,IAAML,GAAYK,EAAS,IAAMN,GAAYM,EAAS,IAAMJ,GAAaI,EAAS,IAAMH,GAAcC,EAAM3K,OAAO8B,SAASxB,GAAK,GAE1IwK,EAAU,IAAMN,GAAYM,EAAU,IAAMP,GAAYO,EAAU,IAAML,GAAaK,EAAU,IAAMJ,GAAcC,EAAM3K,OAAO8B,SAASxB,GAAK,KAHrJuJ,GAAS,IArBhB,MA+BThB,EAAWkC,MAAM9B,GACbJ,EAAWmC,YACXnC,EAAW/I,IAAIyG,EAAQC,GACnBwC,GACAA,GAAM,EACNF,EAAShJ,IAAIyG,EAAQC,EAAM3G,GAC3BkJ,EAAWjJ,IAAIyG,EAAQC,EAAM3G,IAC1BmJ,GAAM,GAEbC,EAAQ,MACRA,GAAS,MAGbC,GAASD,EAETW,EAASqB,sBAAsBd,GAC3BN,IACAhH,cAAciH,GACdoB,qBAAqBtB,GAErBzH,SAAS2F,eAAe,WAAWqD,MAAMC,QAAU,SAI3DjB,IApMJtC,EAAKzF,iBAAiB,SAAUjB,IAC5B6G,IACAD,EAAQoD,MAAMC,QAAU,OACxBvD,EAAKsD,MAAMC,QAAU,UAGzBjJ,SAAS2F,eAAe,WAAW1F,iBAAiB,SAAUjB,IAC1DgB,SAAS2F,eAAe,WAAWqD,MAAMC,QAAU,OAEnDjJ,SAASkJ,qBAAqB,UAAU,GAAGnJ,SAC3C8F,OA6LJE,OAAOF,MAAQA,ICnNXsD,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QAIfJ,EAAoBQ,EAAIF,EhCzBpB7N,EAAW,GACfuN,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS9J,EAAI,EAAGA,EAAIxE,EAASwD,OAAQgB,IAAK,CAGzC,IAFA,IAAK0J,EAAUC,EAAIC,GAAYpO,EAASwE,GACpC+J,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS1K,OAAQgL,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaK,OAAOC,KAAKnB,EAAoBS,GAAGW,OAAOC,GAASrB,EAAoBS,EAAEY,GAAKV,EAASM,MAC9IN,EAASW,OAAOL,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG1CG,IACFvO,EAAS6O,OAAOrK,IAAK,GACrByJ,EAASE,KAGX,OAAOF,EAtBNG,EAAWA,GAAY,EACvB,IAAI,IAAI5J,EAAIxE,EAASwD,OAAQgB,EAAI,GAAKxE,EAASwE,EAAI,GAAG,GAAK4J,EAAU5J,IAAKxE,EAASwE,GAAKxE,EAASwE,EAAI,GACrGxE,EAASwE,GAAK,CAAC0J,EAAUC,EAAIC,IiCJ/Bb,EAAoBuB,EAAI,CAACnB,EAASoB,KACjC,IAAI,IAAIH,KAAOG,EACXxB,EAAoByB,EAAED,EAAYH,KAASrB,EAAoByB,EAAErB,EAASiB,IAC5EH,OAAOQ,eAAetB,EAASiB,EAAK,CAAEM,YAAY,EAAMC,IAAKJ,EAAWH,MCJ3ErB,EAAoByB,EAAI,CAACI,EAAKC,IAAUZ,OAAOa,UAAUC,eAAezB,KAAKsB,EAAKC,G,MCKlF,IAAIG,EAAkB,CACrBC,IAAK,GAaNlC,EAAoBS,EAAEQ,EAAKkB,GAA0C,IAA7BF,EAAgBE,GAGxD,IAAIC,EAAuB,CAACC,EAA4BtP,KACvD,IAGIkN,EAAUkC,GAHTxB,EAAU2B,EAAaC,GAAWxP,EAGhBkE,EAAI,EAC3B,IAAIgJ,KAAYqC,EACZtC,EAAoByB,EAAEa,EAAarC,KACrCD,EAAoBQ,EAAEP,GAAYqC,EAAYrC,IAGhD,GAAGsC,EAAS,IAAI7B,EAAS6B,EAAQvC,GAEjC,IADGqC,GAA4BA,EAA2BtP,GACrDkE,EAAI0J,EAAS1K,OAAQgB,IACzBkL,EAAUxB,EAAS1J,GAChB+I,EAAoByB,EAAEQ,EAAiBE,IAAYF,EAAgBE,IACrEF,EAAgBE,GAAS,KAE1BF,EAAgBtB,EAAS1J,IAAM,EAEhC,OAAO+I,EAAoBS,EAAEC,IAG1B8B,EAAqBC,KAAyB,mBAAIA,KAAyB,oBAAK,GACpFD,EAAmB7M,QAAQyM,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBlP,KAAO8O,EAAqBM,KAAK,KAAMF,EAAmBlP,KAAKoP,KAAKF,K,GC3CvF,IAAIG,EAAsB3C,EAAoBS,OAAEN,EAAW,CAAC,KAAK,IAAOH,EAAoB,OAC5F2C,EAAsB3C,EAAoBS,EAAEkC,I","file":"main.5700e5d60fb43788e61d.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","class linkedList {\r\n    constructor() {\r\n        this.tail = null\r\n        this.head = null\r\n        this.curr = null\r\n    }\r\n    static id = 0\r\n    add(data) {\r\n        const node = {\r\n            value: data,\r\n            next: null,\r\n            prev: null,\r\n            id: linkedList.id,\r\n        }\r\n        linkedList.id++\r\n        if (this.tail === null) {\r\n            this.tail = this.head = node\r\n        } else {\r\n            node.prev = this.head\r\n            this.head.next = node\r\n            this.head = node\r\n        }\r\n    }\r\n    delete(id) {\r\n        this.curr = this.tail\r\n\r\n        while (this.curr !== null) {\r\n            if (id === this.curr.id) {\r\n                if (this.tail === this.curr && this.head === this.curr) {\r\n                    this.curr.value = null\r\n                    this.head = this.tail = null\r\n                } else if (this.curr.prev === null) {\r\n                    this.curr.value = null\r\n                    this.tail = this.curr.next\r\n                    this.curr.next.prev = null\r\n                } else if (this.curr.next === null) {\r\n                    this.curr.value = null\r\n                    this.head = this.curr.prev\r\n                    this.curr.prev.next = null\r\n                } else {\r\n                    this.curr.value = null\r\n                    this.curr.prev.next = this.curr.next\r\n                    this.curr.next.prev = this.curr.prev\r\n                }\r\n                break\r\n            }\r\n\r\n            this.curr = this.curr.next\r\n        }\r\n    }\r\n    for() {\r\n        let arr = []\r\n        this.curr = this.tail\r\n        while (this.curr !== null) {\r\n            arr.push([this.curr.id, this.curr.value])\r\n            this.curr = this.curr.next\r\n        }\r\n        return arr\r\n    }\r\n}\r\n\r\nexport { linkedList }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Dino {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frames = []\r\n        this.framesb = []\r\n\r\n        this.animTime = 80\r\n        this.animTimeMin = 50\r\n\r\n        this.frame = 1\r\n        this.isb = false\r\n        this.active = false\r\n\r\n        this.hity = 1\r\n        this.hitx = 1.2\r\n        this.hitz = 1.2\r\n\r\n        {\r\n            const geometry = new THREE.BoxGeometry(1.2, 1, 1.2)\r\n            const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n            const cube = new THREE.Mesh(geometry, material)\r\n            scene.add(cube)\r\n            cube.visible = false\r\n\r\n            this.hitbox = cube\r\n        }\r\n\r\n        this.hitby = 1\r\n        this.hitbx = 1.6\r\n        this.hitbz = 1\r\n\r\n        {\r\n            const geometry = new THREE.BoxGeometry(1.6, 1, 1)\r\n            const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n            const cube = new THREE.Mesh(geometry, material)\r\n            scene.add(cube)\r\n            cube.visible = false\r\n\r\n            this.hitboxb = cube\r\n        }\r\n\r\n        this.framesPos = [\r\n            { z: 0.15, y: -0.2, x: 0.1 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n        ]\r\n\r\n        this.framesbPos = [\r\n            { z: 0.15, y: -0.2, x: 0.6 },\r\n            { z: 0.45, y: -1.9, x: 0.1 },\r\n            { z: 0.15, y: -0.2, x: -0.2 },\r\n            { z: 0.15, y: -0.6, x: 0.6 },\r\n            { z: 0.15, y: -0.4, x: 0.2 },\r\n            { z: 0.15, y: -2.2, x: 0 },\r\n            { z: 0.15, y: -2.3, x: 0.1 },\r\n            { z: 0.15, y: -2, x: -0.1 },\r\n        ]\r\n    }\r\n    init() {\r\n        // load models + sorting by frames\r\n        const dir = [\r\n            \"./models/dino/dino1\",\r\n            \"./models/dino/dino2\",\r\n            \"./models/dino/dino3\",\r\n            \"./models/dino/dino4\",\r\n            \"./models/dino/dino5\",\r\n            \"./models/dino/dino6\",\r\n            \"./models/dino/dino7\",\r\n            \"./models/dino/dino8\",\r\n        ]\r\n\r\n        const dirb = [\r\n            \"./models/dinoB/dinob1\",\r\n            \"./models/dinoB/dinob2\",\r\n            \"./models/dinoB/dinob3\",\r\n            \"./models/dinoB/dinob4\",\r\n            \"./models/dinoB/dinob5\",\r\n            \"./models/dinoB/dinob6\",\r\n            \"./models/dinoB/dinob7\",\r\n            \"./models/dinoB/dinob8\",\r\n        ]\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            dir.forEach((e) => {\r\n                mtlLoader.load(`${e}.mtl`, (material) => {\r\n                    material.preload()\r\n                    objLoader.setMaterials(material)\r\n\r\n                    objLoader.load(`${e}.obj`, (mesh) => {\r\n                        this.frames.push(mesh)\r\n                        if (this.frames.length === 8 && this.framesb.length === 8) resolve()\r\n                    })\r\n                })\r\n            })\r\n            dirb.forEach((e) => {\r\n                mtlLoader.load(`${e}.mtl`, (material) => {\r\n                    material.preload()\r\n                    objLoader.setMaterials(material)\r\n\r\n                    objLoader.load(`${e}.obj`, (mesh) => {\r\n                        this.framesb.push(mesh)\r\n                        if (this.frames.length === 8 && this.framesb.length === 8) resolve()\r\n                    })\r\n                })\r\n            })\r\n        }).then(() => {\r\n            this.frames.sort((a, b) => {\r\n                if (a.materialLibraries[0] >= b.materialLibraries[0]) return 1\r\n                return -1\r\n            })\r\n            this.framesb.sort((a, b) => {\r\n                if (a.materialLibraries[0] >= b.materialLibraries[0]) return 1\r\n                return -1\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x = 0, y = 0, z = 0) {\r\n        // add frames && animation\r\n        this.frames.forEach((e) => {\r\n            scene.add(e)\r\n            e.visible = false\r\n        })\r\n        this.framesb.forEach((e) => {\r\n            scene.add(e)\r\n            e.visible = false\r\n        })\r\n\r\n        this.position(x, y, z)\r\n        this.setControls()\r\n\r\n        this.active = true\r\n        this.animation()\r\n    }\r\n\r\n    remove(Scene) {\r\n        this.active = false\r\n\r\n        this.frames.forEach((e) => scene.remove(e))\r\n        this.framesb.forEach((e) => scene.remove(e))\r\n    }\r\n\r\n    setControls() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if (e.code === \"KeyS\" || e.code === \"ArrowDown\") {\r\n                this.isb = true\r\n\r\n                this.frames[this.frame].visible = false\r\n                this.framesb[this.frame].visible = true\r\n            }\r\n            if (e.code === \"Space\" || e.code === \"KeyW\" || e.code === \"ArrowUp\") {\r\n                if (this.active) this.jupm()\r\n            }\r\n        })\r\n\r\n        document.addEventListener(\"keyup\", (e) => {\r\n            if (e.code === \"KeyS\" || e.code === \"ArrowDown\") {\r\n                this.isb = false\r\n\r\n                this.framesb[this.frame].visible = false\r\n                this.frames[this.frame].visible = true\r\n            }\r\n        })\r\n    }\r\n\r\n    animation() {\r\n        // frames animation\r\n        setTimeout(() => {\r\n            if (this.frame === 7) {\r\n                if (!this.isb) {\r\n                    this.frames[0].visible = true\r\n                } else {\r\n                    this.framesb[0].visible = true\r\n                }\r\n                this.frames[this.frame].visible = false\r\n                this.framesb[this.frame].visible = false\r\n                this.frame = 0\r\n            } else {\r\n                if (!this.isb) {\r\n                    this.frames[this.frame].visible = false\r\n                    this.frames[this.frame + 1].visible = true\r\n                } else {\r\n                    this.framesb[this.frame].visible = false\r\n                    this.framesb[this.frame + 1].visible = true\r\n                }\r\n                this.frames[this.frame].visible = false\r\n                this.framesb[this.frame].visible = false\r\n                this.frame++\r\n            }\r\n            if (this.active === true) this.animation()\r\n            if (this.animTime > this.animTimeMin) this.animTime -= 0.1\r\n        }, this.animTime)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framesPos = [\r\n            { z: 0.15, y: -0.2, x: 0.1 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n            { z: 0.15, y: -0.2, x: 0 },\r\n        ]\r\n\r\n        this.framesbPos = [\r\n            { z: 0.15, y: -0.2, x: 0.6 },\r\n            { z: 0.45, y: -1.9, x: 0.1 },\r\n            { z: 0.15, y: -0.2, x: -0.2 },\r\n            { z: 0.15, y: -0.6, x: 0.6 },\r\n            { z: 0.15, y: -0.4, x: 0.2 },\r\n            { z: 0.15, y: -2.2, x: 0 },\r\n            { z: 0.15, y: -2.3, x: 0.1 },\r\n            { z: 0.15, y: -2, x: -0.1 },\r\n        ]\r\n\r\n        this.framesPos.forEach((e) => {\r\n            e.z += z\r\n            e.x += x\r\n            e.y += y\r\n        })\r\n        this.framesbPos.forEach((e) => {\r\n            e.z += z\r\n            e.x += x\r\n            e.y += y\r\n        })\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            this.frames[i].position.z = this.framesPos[i].z\r\n            this.frames[i].position.y = this.framesPos[i].y\r\n            this.frames[i].position.x = this.framesPos[i].x\r\n\r\n            this.framesb[i].position.z = this.framesbPos[i].z\r\n            this.framesb[i].position.y = this.framesbPos[i].y\r\n            this.framesb[i].position.x = this.framesbPos[i].x\r\n        }\r\n\r\n        this.hitbox.position.z = this.framesPos[1].z\r\n        this.hitbox.position.y = this.framesPos[1].y + 1.3\r\n        this.hitbox.position.x = this.framesPos[1].x\r\n\r\n        this.hitboxb.position.z = this.framesPos[1].z\r\n        this.hitboxb.position.y = this.framesPos[1].y + 1.3\r\n        this.hitboxb.position.x = this.framesPos[1].x\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framesPos.forEach((e) => {\r\n            e.z += z\r\n            e.x += x\r\n            e.y += y\r\n        })\r\n        this.framesbPos.forEach((e) => {\r\n            e.z += z\r\n            e.x += x\r\n            e.y += y\r\n        })\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            this.frames[i].position.z = this.framesPos[i].z\r\n            this.frames[i].position.x = this.framesPos[i].x\r\n            this.frames[i].position.y = this.framesPos[i].y\r\n\r\n            this.framesb[i].position.z = this.framesbPos[i].z\r\n            this.framesb[i].position.x = this.framesbPos[i].x\r\n            this.framesb[i].position.y = this.framesbPos[i].y\r\n        }\r\n\r\n        this.hitbox.position.z = this.framesPos[1].z\r\n        this.hitbox.position.y = this.framesPos[1].y + 1.3\r\n        this.hitbox.position.x = this.framesPos[1].x\r\n\r\n        this.hitboxb.position.z = this.framesPos[1].z\r\n        this.hitboxb.position.y = this.framesPos[1].y + 1.3\r\n        this.hitboxb.position.x = this.framesPos[1].x\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frames.forEach((e) => {\r\n            e.rotation.x += x\r\n            e.rotation.y += y\r\n            e.rotation.z += z\r\n        })\r\n        this.framesb.forEach((e) => {\r\n            e.rotation.x += x\r\n            e.rotation.y += y\r\n            e.rotation.z += z\r\n        })\r\n    }\r\n\r\n    jupm() {\r\n        let power = 0.38\r\n        let time = 300\r\n        this.active = false\r\n\r\n        let interval = setInterval(() => {\r\n            if (power < -0.4) {\r\n                this.active = true\r\n                this.animation()\r\n                this.position(0, 0, 0)\r\n                clearInterval(interval)\r\n            }\r\n            if (!this.active) this.positionadd(0, power, 0)\r\n            power -= 0.015\r\n        }, 18)\r\n    }\r\n}\r\n\r\nexport { Dino }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\n// length = 9\r\n// width = 4.25\r\n\r\nclass Floor {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0.125, x: 0.25, y: -1.75 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/ground/floor\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        this.frame.scale.multiplyScalar(2.5)\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0.125, x: 0.25, y: -1.75 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Floor }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\n// length = 9\r\n// width = 5\r\n\r\nclass Hill {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0, x: 0, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/ground/hill\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        this.frame.scale.multiplyScalar(2.5)\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0, x: 0, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Hill }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Ptero {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frames = []\r\n\r\n        this.animTime = 150\r\n\r\n        this.frame = 1\r\n        this.active = false\r\n\r\n        this.framesPos = [\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n        ]\r\n\r\n        this.framePos = { z: 0.25, y: 0, x: 0 }\r\n\r\n        this.hity = 0.8\r\n        this.hitx = 1\r\n        this.hitz = 1\r\n\r\n        const geometry = new THREE.BoxGeometry(1, 0.8, 1)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n    init() {\r\n        // load models + sorting by frames\r\n        const dir = [\r\n            \"./models/ptero/ptero1\",\r\n            \"./models/ptero/ptero2\",\r\n            \"./models/ptero/ptero3\",\r\n            \"./models/ptero/ptero4\",\r\n            \"./models/ptero/ptero5\",\r\n            \"./models/ptero/ptero6\",\r\n            \"./models/ptero/ptero7\",\r\n            \"./models/ptero/ptero8\",\r\n        ]\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            dir.forEach((e) => {\r\n                mtlLoader.load(`${e}.mtl`, (material) => {\r\n                    material.preload()\r\n                    objLoader.setMaterials(material)\r\n\r\n                    objLoader.load(`${e}.obj`, (mesh) => {\r\n                        this.frames.push(mesh)\r\n                        if (this.frames.length === 8) resolve()\r\n                    })\r\n                })\r\n            })\r\n        }).then(() => {\r\n            this.frames.sort((a, b) => {\r\n                if (a.materialLibraries[0] >= b.materialLibraries[0]) return 1\r\n                return -1\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        // add frames && animation\r\n        this.frames.forEach((e) => {\r\n            scene.add(e)\r\n            e.visible = false\r\n        })\r\n\r\n        this.position(x, y, z)\r\n\r\n        this.active = true\r\n        this.animation()\r\n    }\r\n\r\n    remove(Scene) {\r\n        this.active = false\r\n\r\n        this.frames.forEach((e) => scene.remove(e))\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    animation() {\r\n        // frames animation\r\n        setTimeout(() => {\r\n            if (this.frame === 7) {\r\n                this.frames[this.frame].visible = false\r\n                this.frames[0].visible = true\r\n                this.frame = 0\r\n            } else {\r\n                this.frames[this.frame].visible = false\r\n                this.frames[this.frame + 1].visible = true\r\n                this.frame++\r\n            }\r\n            if (this.active === true) this.animation()\r\n        }, this.animTime)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framesPos = [\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n            { z: 0.25, y: 0, x: 0 },\r\n        ]\r\n\r\n        this.framesPos.forEach((e) => {\r\n            e.z += z\r\n            e.x += x\r\n            e.y += y\r\n        })\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            this.frames[i].position.z = this.framesPos[i].z\r\n            this.frames[i].position.y = this.framesPos[i].y\r\n            this.frames[i].position.x = this.framesPos[i].x\r\n        }\r\n\r\n        this.framePos = { x, y, z }\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 0.4\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framesPos.forEach((e) => {\r\n            e.z += z\r\n            e.x += x\r\n            e.y += y\r\n        })\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            this.frames[i].position.z = this.framesPos[i].z\r\n            this.frames[i].position.x = this.framesPos[i].x\r\n            this.frames[i].position.y = this.framesPos[i].y\r\n        }\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 0.4\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frames.forEach((e) => {\r\n            e.rotation.x += x\r\n            e.rotation.y += y\r\n            e.rotation.z += z\r\n        })\r\n    }\r\n}\r\n\r\nexport { Ptero }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\n// length = 10\r\n// width = 5.58\r\n\r\nclass Subfloor {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0.1, x: 0, y: -1.2 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/ground/subfloor\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        this.frame.scale.multiplyScalar(0.9)\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI / 2, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0.1, x: 0, y: -1.2 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Subfloor }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Bigcactus1 {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.05, x: 0.05, y: 0 }\r\n\r\n        this.hity = 3.2\r\n        this.hitx = 1\r\n        this.hitz = 1\r\n\r\n        const geometry = new THREE.BoxGeometry(1, 3.2, 1)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/cactus/1bigcactus\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.05, x: 0.05, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Bigcactus1 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Bigcactus2 {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0.45, x: 0.4, y: 0 }\r\n\r\n        this.hity = 3.2\r\n        this.hitx = 1.2\r\n        this.hitz = 2\r\n\r\n        const geometry = new THREE.BoxGeometry(1.2, 3.2, 2)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/cactus/2bigcactus\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0.45, x: 0.4, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Bigcactus2 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Mediumcactus2 {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0.15, x: -0.3, y: 0 }\r\n\r\n        this.hity = 2\r\n        this.hitx = 1.3\r\n        this.hitz = 1\r\n\r\n        const geometry = new THREE.BoxGeometry(1.3, 2, 1)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/cactus/2mediumcactus\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0.15, x: -0.3, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x - 0.4\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x - 0.4\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Mediumcactus2 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Smallcactus2 {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.3, x: -0.55, y: 0 }\r\n\r\n        this.hity = 1.5\r\n        this.hitx = 1\r\n        this.hitz = 1\r\n\r\n        const geometry = new THREE.BoxGeometry(1, 1.5, 1)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/cactus/2smallcactus\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.3, x: -0.55, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z - 0.5\r\n        this.hitbox.position.x = this.framePos.x + 0.4\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z - 0.5\r\n        this.hitbox.position.x = this.framePos.x + 0.4\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Smallcactus2 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Mediumcactus3 {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.5, x: -0.15, y: 0 }\r\n\r\n        this.hity = 2.5\r\n        this.hitx = 1\r\n        this.hitz = 1\r\n\r\n        const geometry = new THREE.BoxGeometry(1, 2.5, 1)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/cactus/3mediumcactus\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.5, x: -0.15, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Mediumcactus3 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport * as THREE from \"three\"\r\n\r\nclass Smallcactus3 {\r\n    constructor(scene) {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.2, x: -0.3, y: 0 }\r\n\r\n        this.hity = 1.5\r\n        this.hitx = 1\r\n        this.hitz = 1\r\n\r\n        const geometry = new THREE.BoxGeometry(1, 1.5, 1)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.y = -200\r\n        cube.position.x = -200\r\n        cube.visible = false\r\n        scene.add(cube)\r\n\r\n        this.hitbox = cube\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/cactus/3smallcactus\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n        scene.remove(this.hitbox)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.2, x: -0.3, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n\r\n        this.hitbox.position.z = this.framePos.z\r\n        this.hitbox.position.x = this.framePos.x\r\n        this.hitbox.position.y = this.framePos.y + 1.1\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Smallcactus3 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Bigtree1 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.5, x: 0, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/bg3/1bigtree\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.5, x: 0, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Bigtree1 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Flower_pink1 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.45, x: -0.15, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/flowers/1flower_pink\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.45, x: -0.15, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Flower_pink1 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Flower_yellow1 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.05, x: 0.05, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/flowers/1flower_yellow\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.05, x: 0.05, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Flower_yellow1 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Flower_pink2 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.3, x: -0.5, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/flowers/2flower_pink\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.3, x: -0.5, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Flower_pink2 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Rock2x2 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.6, x: -0.1, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/rocks/2x2rock\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.6, x: -0.1, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Rock2x2 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Rock2x3 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.25, x: -0.1, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/rocks/2x3rock\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.25, x: -0.1, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Rock2x3 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Rock3x3 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.65, x: -0.05, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/rocks/3x3rock\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.65, x: -0.05, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Rock3x3 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Rock3x4 {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.4, x: 0.15, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/rocks/3x4rock\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.4, x: 0.15, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Rock3x4 }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Dinoskull {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0.25, x: -0.25, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/bg2/dinoskull\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0.25, x: -0.25, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Dinoskull }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Hintgold {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.25, x: -0.05, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/bg2/hintgold\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.25, x: -0.05, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Hintgold }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Palm {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0.05, x: 0.2, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/bg3/palm\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0.05, x: 0.2, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Palm }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Scorpion {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0, x: 0.5, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/bg1/scorpion\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0, x: 0.5, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Scorpion }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Seaweed {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: -0.05, x: -0.35, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/water/seaweed\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: -0.05, x: -0.35, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Seaweed }\r\n","import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\n\r\nclass Skull {\r\n    constructor() {\r\n        // object animation + state\r\n        this.frame = 0\r\n\r\n        this.framePos = { z: 0, x: 1.3, y: 0 }\r\n    }\r\n\r\n    init() {\r\n        const dir = \"./models/bg1/skull\"\r\n\r\n        const objLoader = new OBJLoader()\r\n        const mtlLoader = new MTLLoader()\r\n\r\n        return new Promise((resolve) => {\r\n            mtlLoader.load(`${dir}.mtl`, (material) => {\r\n                material.preload()\r\n                objLoader.setMaterials(material)\r\n\r\n                objLoader.load(`${dir}.obj`, (mesh) => {\r\n                    this.frame = mesh\r\n                    if (this.frame !== 0) {\r\n                        //scale\r\n                        resolve()\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    add(scene, x, y, z) {\r\n        scene.add(this.frame)\r\n\r\n        this.rotation(0, Math.PI, 0)\r\n\r\n        this.position(x, y, z)\r\n    }\r\n\r\n    remove(scene) {\r\n        scene.remove(this.frame)\r\n    }\r\n\r\n    position(x = 0, y = 0, z = 0) {\r\n        this.framePos = { z: 0, x: 1.3, y: 0 }\r\n\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n        this.framePos.z += z\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    positionadd(x = 0, y = 0, z = 0) {\r\n        this.framePos.z += z\r\n        this.framePos.x += x\r\n        this.framePos.y += y\r\n\r\n        this.frame.position.z = this.framePos.z\r\n        this.frame.position.x = this.framePos.x\r\n        this.frame.position.y = this.framePos.y\r\n    }\r\n\r\n    rotation(x = 0, y = 0, z = 0) {\r\n        this.frame.rotation.x += x\r\n        this.frame.rotation.y += y\r\n        this.frame.rotation.z += z\r\n    }\r\n}\r\n\r\nexport { Skull }\r\n","import { Dino } from \"./dino\"\r\nimport { Floor } from \"./floor/floor\"\r\nimport { Hill } from \"./floor/hill\"\r\nimport { Ptero } from \"./ptero\"\r\nimport { Subfloor } from \"./floor/subfloor\"\r\nimport { Bigcactus1 } from \"./cactuses/1bigcactus\"\r\nimport { Bigcactus2 } from \"./cactuses/2bigcactus\"\r\nimport { Mediumcactus2 } from \"./cactuses/2mediumcactus\"\r\nimport { Smallcactus2 } from \"./cactuses/2smallcactus\"\r\nimport { Mediumcactus3 } from \"./cactuses/3mediumcactus\"\r\nimport { Smallcactus3 } from \"./cactuses/3smallcactus\"\r\nimport { Bigtree1 } from \"./decorations/1bigtree\"\r\nimport { Flower_pink1 } from \"./decorations/1flower_pink\"\r\nimport { Flower_yellow1 } from \"./decorations/1flower_yellow\"\r\nimport { Flower_pink2 } from \"./decorations/2flower_pink\"\r\nimport { Rock2x2 } from \"./decorations/2x2rock\"\r\nimport { Rock2x3 } from \"./decorations/2x3rock\"\r\nimport { Rock3x3 } from \"./decorations/3x3rock\"\r\nimport { Rock3x4 } from \"./decorations/3x4rock\"\r\nimport { Dinoskull } from \"./decorations/dinoskull\"\r\nimport { Hintgold } from \"./decorations/hintgold\"\r\nimport { Palm } from \"./decorations/palm\"\r\nimport { Scorpion } from \"./decorations/scorpion\"\r\nimport { Seaweed } from \"./decorations/seaweed\"\r\nimport { Skull } from \"./decorations/skull\"\r\nimport { scene } from \"./index\"\r\n\r\nclass loader {\r\n    constructor(scene) {\r\n        this.dino = () => new Dino()\r\n        this.floor = () => new Floor()\r\n        this.hill = () => new Hill()\r\n        this.ptero = () => new Ptero(scene)\r\n        this.subfloor = () => new Subfloor()\r\n        this.bigcactus1 = () => new Bigcactus1(scene)\r\n        this.bigcactus2 = () => new Bigcactus2(scene)\r\n        this.mediumcactus2 = () => new Mediumcactus2(scene)\r\n        this.smallcactus2 = () => new Smallcactus2(scene)\r\n        this.mediumcactus3 = () => new Mediumcactus3(scene)\r\n        this.smallcactus3 = () => new Smallcactus3(scene)\r\n        this.bigtree1 = () => new Bigtree1()\r\n        this.flower_pink1 = () => new Flower_pink1()\r\n        this.flower_yellow1 = () => new Flower_yellow1()\r\n        this.flower_pink2 = () => new Flower_pink2()\r\n        this.rock2x2 = () => new Rock2x2()\r\n        this.rock2x3 = () => new Rock2x3()\r\n        this.rock3x3 = () => new Rock3x3()\r\n        this.rock3x4 = () => new Rock3x4()\r\n        this.dinoskull = () => new Dinoskull()\r\n        this.hintgold = () => new Hintgold()\r\n        this.palm = () => new Palm()\r\n        this.scorpion = () => new Scorpion()\r\n        this.seaweed = () => new Seaweed()\r\n        this.skull = () => new Skull()\r\n    }\r\n}\r\n\r\nexport { loader }\r\n","class FloorSpaw {\r\n    constructor(Loader, list, scene) {\r\n        this.length = 81\r\n\r\n        for (let i = -1; i < 10; i++) {\r\n            {\r\n                const floor = Loader.floor()\r\n                floor.init().then(() => {\r\n                    floor.add(scene)\r\n                    list.add(floor)\r\n                    floor.position(i * 9, 0, 0)\r\n                })\r\n            }\r\n\r\n            {\r\n                const subfloor = Loader.subfloor()\r\n                subfloor.init().then(() => {\r\n                    subfloor.add(scene)\r\n                    list.add(subfloor)\r\n                    subfloor.position(i * 9, 0, 4)\r\n                })\r\n            }\r\n            {\r\n                const subfloor = Loader.subfloor()\r\n                subfloor.init().then(() => {\r\n                    subfloor.add(scene)\r\n                    list.add(subfloor)\r\n                    subfloor.position(i * 9, 0, 9.58)\r\n                })\r\n            }\r\n            {\r\n                const subfloor = Loader.subfloor()\r\n                subfloor.init().then(() => {\r\n                    subfloor.add(scene)\r\n                    list.add(subfloor)\r\n                    subfloor.position(i * 9, 0, 15)\r\n                })\r\n            }\r\n            {\r\n                const hill = Loader.hill()\r\n                hill.init().then(() => {\r\n                    hill.add(scene)\r\n                    list.add(hill)\r\n                    hill.position(i * 9, -1.5, -8.87)\r\n                })\r\n            }\r\n            {\r\n                const hill = Loader.hill()\r\n                hill.init().then(() => {\r\n                    hill.add(scene)\r\n                    list.add(hill)\r\n                    hill.position(i * 9, 0.25, -13.87)\r\n                })\r\n            }\r\n            {\r\n                const subfloor = Loader.subfloor()\r\n                subfloor.init().then(() => {\r\n                    subfloor.add(scene)\r\n                    subfloor.position(i * 9, 0, -4.5)\r\n                    subfloor.rotation(0, 0, Math.PI)\r\n                })\r\n            }\r\n        }\r\n    }\r\n    minus(a) {\r\n        this.length -= a\r\n    }\r\n    checkif() {\r\n        return this.length <= 72\r\n    }\r\n    add(Loader, list) {\r\n        {\r\n            const floor = Loader.floor()\r\n            floor.init().then(() => {\r\n                floor.add(scene)\r\n                list.add(floor)\r\n                floor.position(this.length, 0, 0)\r\n            })\r\n        }\r\n        {\r\n            const subfloor = Loader.subfloor()\r\n            subfloor.init().then(() => {\r\n                subfloor.add(scene)\r\n                list.add(subfloor)\r\n                subfloor.position(this.length, 0, 4)\r\n            })\r\n        }\r\n        {\r\n            const subfloor = Loader.subfloor()\r\n            subfloor.init().then(() => {\r\n                subfloor.add(scene)\r\n                list.add(subfloor)\r\n                subfloor.position(this.length, 0, 9.58)\r\n            })\r\n        }\r\n        {\r\n            const subfloor = Loader.subfloor()\r\n            subfloor.init().then(() => {\r\n                subfloor.add(scene)\r\n                list.add(subfloor)\r\n                subfloor.position(this.length, 0, 15)\r\n            })\r\n        }\r\n        {\r\n            const hill = Loader.hill()\r\n            hill.init().then(() => {\r\n                hill.add(scene)\r\n                list.add(hill)\r\n                hill.position(this.length, -1.5, -8.87)\r\n            })\r\n        }\r\n        {\r\n            const hill = Loader.hill()\r\n            hill.init().then(() => {\r\n                hill.add(scene)\r\n                list.add(hill)\r\n                hill.position(this.length, 0.25, -13.87)\r\n            })\r\n        }\r\n        this.length += 9\r\n    }\r\n}\r\n\r\nexport { FloorSpaw }\r\n","class DecSpawn {\r\n    constructor(Loader, list, scene) {\r\n        this.bg1 = [\"dinoskull\", \"hintgold\", \"scorpion\", \"skull\", \"1bigcactus\", \"2mediumcactus\", \"2smallcactus\", \"3mediumcactus\", \"3smallcactus\"]\r\n\r\n        this.bg2 = [\"1bigtree\", \"palm\", \"dinoskull\", \"skull\", \"1bigcactus\", \"2bigcactus\", \"2mediumcactus\", \"2smallcactus\", \"3mediumcactus\", \"3smallcactus\"]\r\n\r\n        this.bg3 = [\"1flower_pink\", \"1flower_yellow\", \"2flower_pink\", \"2x2rock\", \"2x3rock\", \"3x3rock\", \"3x4rock\", \"dinoskull\", \"scorpion\", \"seaweed\"]\r\n\r\n        this.bg4 = [\"1flower_pink\", \"1flower_yellow\", \"2flower_pink\", \"2x2rock\", \"2x3rock\", \"3x3rock\", \"3x4rock\"]\r\n        ;(() => {\r\n            let name\r\n            for (let i = 0; i < 73; i += 14) {\r\n                name = this.bg1[Math.floor(Math.random() * this.bg1.length)]\r\n                if (name === \"skull\") {\r\n                    const skull = Loader.skull()\r\n                    skull.init().then(() => {\r\n                        skull.frame.scale.multiplyScalar(0.5)\r\n                        skull.rotation((Math.PI / 8) * 4, 0, (Math.PI / 8) * 11)\r\n\r\n                        skull.add(scene)\r\n                        skull.position(i, 0.6, this.random(-9, -7))\r\n                        list.add(skull)\r\n                    })\r\n                }\r\n                if (name === \"dinoskull\") {\r\n                    const dinoskull = Loader.dinoskull()\r\n                    dinoskull.init().then(() => {\r\n                        dinoskull.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                        dinoskull.add(scene)\r\n                        dinoskull.position(i, 0.6, this.random(-9, -7))\r\n                        list.add(dinoskull)\r\n                    })\r\n                }\r\n                if (name === \"hintgold\") {\r\n                    const hintgold = Loader.hintgold()\r\n                    hintgold.init().then(() => {\r\n                        hintgold.rotation(0, (Math.PI / 8) * 7, 0)\r\n\r\n                        hintgold.add(scene)\r\n                        hintgold.position(i, 0.2, this.random(-9, -7))\r\n                        list.add(hintgold)\r\n                    })\r\n                }\r\n                if (name === \"scorpion\") {\r\n                    const scorpion = Loader.scorpion()\r\n                    scorpion.init().then(() => {\r\n                        scorpion.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                        scorpion.add(scene)\r\n                        scorpion.position(i, 0.2, this.random(-11, -8))\r\n                        list.add(scorpion)\r\n                    })\r\n                }\r\n                if (name === \"1bigcactus\") {\r\n                    const bigcactus1 = Loader.bigcactus1()\r\n                    bigcactus1.init().then(() => {\r\n                        bigcactus1.rotation(0, (Math.PI / 8) * 2, 0)\r\n\r\n                        bigcactus1.add(scene)\r\n                        bigcactus1.position(i, 0.2, this.random(-10, -8))\r\n                        list.add(bigcactus1)\r\n                    })\r\n                }\r\n                if (name === \"2mediumcactus\") {\r\n                    const mediumcactus2 = Loader.mediumcactus2()\r\n                    mediumcactus2.init().then(() => {\r\n                        mediumcactus2.rotation(0, (Math.PI / 8) * 7, 0)\r\n\r\n                        mediumcactus2.add(scene)\r\n                        mediumcactus2.position(i, 0.2, this.random(-11, -9))\r\n                        list.add(mediumcactus2)\r\n                    })\r\n                }\r\n                if (name === \"2smallcactus\") {\r\n                    const smallcactus2 = Loader.smallcactus2()\r\n                    smallcactus2.init().then(() => {\r\n                        smallcactus2.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                        smallcactus2.add(scene)\r\n                        smallcactus2.position(i, 0.2, this.random(-10, -7))\r\n                        list.add(smallcactus2)\r\n                    })\r\n                }\r\n                if (name === \"3mediumcactus\") {\r\n                    const mediumcactus3 = Loader.mediumcactus3()\r\n                    mediumcactus3.init().then(() => {\r\n                        mediumcactus3.rotation(0, (Math.PI / 8) * 5, 0)\r\n\r\n                        mediumcactus3.add(scene)\r\n                        mediumcactus3.position(i, 0.2, this.random(-9, -8))\r\n                        list.add(mediumcactus3)\r\n                    })\r\n                }\r\n                if (name === \"3smallcactus\") {\r\n                    const smallcactus3 = Loader.smallcactus3()\r\n                    smallcactus3.init().then(() => {\r\n                        smallcactus3.rotation(0, (Math.PI / 8) * 3, 0)\r\n\r\n                        smallcactus3.add(scene)\r\n                        smallcactus3.position(i, 0.2, this.random(-10, -8))\r\n                        list.add(smallcactus3)\r\n                    })\r\n                }\r\n                name = this.bg2[Math.floor(Math.random() * this.bg2.length)]\r\n                if (name === \"1bigtree\") {\r\n                    const bigtree1 = Loader.bigtree1()\r\n                    bigtree1.init().then(() => {\r\n                        bigtree1.rotation(0, -(Math.PI / 8) * 1, 0)\r\n\r\n                        bigtree1.add(scene)\r\n                        bigtree1.position(i, 2, this.random(-15, -13))\r\n                        list.add(bigtree1)\r\n                    })\r\n                }\r\n                if (name === \"palm\") {\r\n                    const palm = Loader.palm()\r\n                    palm.init().then(() => {\r\n                        palm.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                        palm.add(scene)\r\n                        palm.position(i, 2, this.random(-15, -13))\r\n                        list.add(palm)\r\n                    })\r\n                }\r\n                if (name === \"dinoskull\") {\r\n                    const dinoskull = Loader.dinoskull()\r\n                    dinoskull.init().then(() => {\r\n                        dinoskull.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                        dinoskull.add(scene)\r\n                        dinoskull.position(i, 2, this.random(-15, -13))\r\n                        list.add(dinoskull)\r\n                    })\r\n                }\r\n                if (name === \"skull\") {\r\n                    const skull = Loader.skull()\r\n                    skull.init().then(() => {\r\n                        skull.frame.scale.multiplyScalar(0.5)\r\n                        skull.rotation((Math.PI / 8) * 4, 0, (Math.PI / 8) * 11)\r\n\r\n                        skull.add(scene)\r\n                        skull.position(i, 2.3, this.random(-15, -13))\r\n                        list.add(skull)\r\n                    })\r\n                }\r\n                if (name === \"1bigcactus\") {\r\n                    const bigcactus1 = Loader.bigcactus1()\r\n                    bigcactus1.init().then(() => {\r\n                        bigcactus1.rotation(0, (Math.PI / 8) * 2, 0)\r\n\r\n                        bigcactus1.add(scene)\r\n                        bigcactus1.position(i, 2, this.random(-15, -13))\r\n                        list.add(bigcactus1)\r\n                    })\r\n                }\r\n                if (name === \"2mediumcactus\") {\r\n                    const mediumcactus2 = Loader.mediumcactus2()\r\n                    mediumcactus2.init().then(() => {\r\n                        mediumcactus2.rotation(0, (Math.PI / 8) * 7, 0)\r\n\r\n                        mediumcactus2.add(scene)\r\n                        mediumcactus2.position(i, 2, this.random(-15, -13))\r\n                        list.add(mediumcactus2)\r\n                    })\r\n                }\r\n                if (name === \"2smallcactus\") {\r\n                    const smallcactus2 = Loader.smallcactus2()\r\n                    smallcactus2.init().then(() => {\r\n                        smallcactus2.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                        smallcactus2.add(scene)\r\n                        smallcactus2.position(i, 2, this.random(-15, -13))\r\n                        list.add(smallcactus2)\r\n                    })\r\n                }\r\n                if (name === \"3mediumcactus\") {\r\n                    const mediumcactus3 = Loader.mediumcactus3()\r\n                    mediumcactus3.init().then(() => {\r\n                        mediumcactus3.rotation(0, (Math.PI / 8) * 5, 0)\r\n\r\n                        mediumcactus3.add(scene)\r\n                        mediumcactus3.position(i, 2, this.random(-14, -12))\r\n                        list.add(mediumcactus3)\r\n                    })\r\n                }\r\n                if (name === \"3smallcactus\") {\r\n                    const smallcactus3 = Loader.smallcactus3()\r\n                    smallcactus3.init().then(() => {\r\n                        smallcactus3.rotation(0, (Math.PI / 8) * 3, 0)\r\n\r\n                        smallcactus3.add(scene)\r\n                        smallcactus3.position(i, 2, this.random(-15, -13))\r\n                        list.add(smallcactus3)\r\n                    })\r\n                }\r\n                if (name === \"2bigcactus\") {\r\n                    const bigcactus2 = Loader.bigcactus2()\r\n                    bigcactus2.init().then(() => {\r\n                        bigcactus2.rotation(0, (Math.PI / 8) * 0, 0)\r\n\r\n                        bigcactus2.add(scene)\r\n                        bigcactus2.position(i, 2, this.random(-15, -13))\r\n                        list.add(bigcactus2)\r\n                    })\r\n                }\r\n            }\r\n        })()\r\n    }\r\n\r\n    add(Loader, list, scene) {\r\n        this.spawnbg1(Loader, list, scene)\r\n        this.spawnbg2(Loader, list, scene)\r\n        this.spawnbg3(Loader, list, scene)\r\n        this.spawnbg4(Loader, list, scene)\r\n    }\r\n\r\n    random(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    spawnbg1(Loader, list, scene) {\r\n        this.bg1i = setTimeout(() => {\r\n            let name = this.bg1[Math.floor(Math.random() * this.bg1.length)]\r\n            if (name === \"skull\") {\r\n                const skull = Loader.skull()\r\n                skull.init().then(() => {\r\n                    skull.frame.scale.multiplyScalar(0.5)\r\n                    skull.rotation((Math.PI / 8) * 4, 0, (Math.PI / 8) * 11)\r\n\r\n                    skull.add(scene)\r\n                    skull.position(80, 0.6, this.random(-9, -7))\r\n                    list.add(skull)\r\n                })\r\n            }\r\n            if (name === \"dinoskull\") {\r\n                const dinoskull = Loader.dinoskull()\r\n                dinoskull.init().then(() => {\r\n                    dinoskull.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                    dinoskull.add(scene)\r\n                    dinoskull.position(80, 0.6, this.random(-9, -7))\r\n                    list.add(dinoskull)\r\n                })\r\n            }\r\n            if (name === \"hintgold\") {\r\n                const hintgold = Loader.hintgold()\r\n                hintgold.init().then(() => {\r\n                    hintgold.rotation(0, (Math.PI / 8) * 7, 0)\r\n\r\n                    hintgold.add(scene)\r\n                    hintgold.position(80, 0.2, this.random(-9, -7))\r\n                    list.add(hintgold)\r\n                })\r\n            }\r\n            if (name === \"scorpion\") {\r\n                const scorpion = Loader.scorpion()\r\n                scorpion.init().then(() => {\r\n                    scorpion.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                    scorpion.add(scene)\r\n                    scorpion.position(80, 0.2, this.random(-11, -8))\r\n                    list.add(scorpion)\r\n                })\r\n            }\r\n            if (name === \"1bigcactus\") {\r\n                const bigcactus1 = Loader.bigcactus1()\r\n                bigcactus1.init().then(() => {\r\n                    bigcactus1.rotation(0, (Math.PI / 8) * 2, 0)\r\n\r\n                    bigcactus1.add(scene)\r\n                    bigcactus1.position(80, 0.2, this.random(-10, -8))\r\n                    list.add(bigcactus1)\r\n                })\r\n            }\r\n            if (name === \"2mediumcactus\") {\r\n                const mediumcactus2 = Loader.mediumcactus2()\r\n                mediumcactus2.init().then(() => {\r\n                    mediumcactus2.rotation(0, (Math.PI / 8) * 7, 0)\r\n\r\n                    mediumcactus2.add(scene)\r\n                    mediumcactus2.position(80, 0.2, this.random(-11, -9))\r\n                    list.add(mediumcactus2)\r\n                })\r\n            }\r\n            if (name === \"2smallcactus\") {\r\n                const smallcactus2 = Loader.smallcactus2()\r\n                smallcactus2.init().then(() => {\r\n                    smallcactus2.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                    smallcactus2.add(scene)\r\n                    smallcactus2.position(63, 0.2, this.random(-10, -7))\r\n                    list.add(smallcactus2)\r\n                })\r\n            }\r\n            if (name === \"3mediumcactus\") {\r\n                const mediumcactus3 = Loader.mediumcactus3()\r\n                mediumcactus3.init().then(() => {\r\n                    mediumcactus3.rotation(0, (Math.PI / 8) * 5, 0)\r\n\r\n                    mediumcactus3.add(scene)\r\n                    mediumcactus3.position(80, 0.2, this.random(-9, -8))\r\n                    list.add(mediumcactus3)\r\n                })\r\n            }\r\n            if (name === \"3smallcactus\") {\r\n                const smallcactus3 = Loader.smallcactus3()\r\n                smallcactus3.init().then(() => {\r\n                    smallcactus3.rotation(0, (Math.PI / 8) * 3, 0)\r\n\r\n                    smallcactus3.add(scene)\r\n                    smallcactus3.position(80, 0.2, this.random(-10, -8))\r\n                    list.add(smallcactus3)\r\n                })\r\n            }\r\n        }, this.random(1500, 3000))\r\n    }\r\n    spawnbg2(Loader, list, scene) {\r\n        this.bg2i = setTimeout(() => {\r\n            let name = this.bg2[Math.floor(Math.random() * this.bg2.length)]\r\n            if (name === \"1bigtree\") {\r\n                const bigtree1 = Loader.bigtree1()\r\n                bigtree1.init().then(() => {\r\n                    bigtree1.rotation(0, -(Math.PI / 8) * 1, 0)\r\n\r\n                    bigtree1.add(scene)\r\n                    bigtree1.position(80, 2, this.random(-15, -13))\r\n                    list.add(bigtree1)\r\n                })\r\n            }\r\n            if (name === \"palm\") {\r\n                const palm = Loader.palm()\r\n                palm.init().then(() => {\r\n                    palm.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    palm.add(scene)\r\n                    palm.position(80, 2, this.random(-15, -13))\r\n                    list.add(palm)\r\n                })\r\n            }\r\n            if (name === \"dinoskull\") {\r\n                const dinoskull = Loader.dinoskull()\r\n                dinoskull.init().then(() => {\r\n                    dinoskull.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                    dinoskull.add(scene)\r\n                    dinoskull.position(80, 2, this.random(-15, -13))\r\n                    list.add(dinoskull)\r\n                })\r\n            }\r\n            if (name === \"skull\") {\r\n                const skull = Loader.skull()\r\n                skull.init().then(() => {\r\n                    skull.frame.scale.multiplyScalar(0.5)\r\n                    skull.rotation((Math.PI / 8) * 4, 0, (Math.PI / 8) * 11)\r\n\r\n                    skull.add(scene)\r\n                    skull.position(80, 2.3, this.random(-15, -13))\r\n                    list.add(skull)\r\n                })\r\n            }\r\n            if (name === \"1bigcactus\") {\r\n                const bigcactus1 = Loader.bigcactus1()\r\n                bigcactus1.init().then(() => {\r\n                    bigcactus1.rotation(0, (Math.PI / 8) * 2, 0)\r\n\r\n                    bigcactus1.add(scene)\r\n                    bigcactus1.position(80, 2, this.random(-15, -13))\r\n                    list.add(bigcactus1)\r\n                })\r\n            }\r\n            if (name === \"2mediumcactus\") {\r\n                const mediumcactus2 = Loader.mediumcactus2()\r\n                mediumcactus2.init().then(() => {\r\n                    mediumcactus2.rotation(0, (Math.PI / 8) * 7, 0)\r\n\r\n                    mediumcactus2.add(scene)\r\n                    mediumcactus2.position(80, 2, this.random(-15, -13))\r\n                    list.add(mediumcactus2)\r\n                })\r\n            }\r\n            if (name === \"2smallcactus\") {\r\n                const smallcactus2 = Loader.smallcactus2()\r\n                smallcactus2.init().then(() => {\r\n                    smallcactus2.rotation(0, (Math.PI / 8) * 6, 0)\r\n\r\n                    smallcactus2.add(scene)\r\n                    smallcactus2.position(63, 2, this.random(-15, -13))\r\n                    list.add(smallcactus2)\r\n                })\r\n            }\r\n            if (name === \"3mediumcactus\") {\r\n                const mediumcactus3 = Loader.mediumcactus3()\r\n                mediumcactus3.init().then(() => {\r\n                    mediumcactus3.rotation(0, (Math.PI / 8) * 5, 0)\r\n\r\n                    mediumcactus3.add(scene)\r\n                    mediumcactus3.position(80, 2, this.random(-14, -12))\r\n                    list.add(mediumcactus3)\r\n                })\r\n            }\r\n            if (name === \"3smallcactus\") {\r\n                const smallcactus3 = Loader.smallcactus3()\r\n                smallcactus3.init().then(() => {\r\n                    smallcactus3.rotation(0, (Math.PI / 8) * 3, 0)\r\n\r\n                    smallcactus3.add(scene)\r\n                    smallcactus3.position(80, 2, this.random(-15, -13))\r\n                    list.add(smallcactus3)\r\n                })\r\n            }\r\n            if (name === \"2bigcactus\") {\r\n                const bigcactus2 = Loader.bigcactus2()\r\n                bigcactus2.init().then(() => {\r\n                    bigcactus2.rotation(0, (Math.PI / 8) * 0, 0)\r\n\r\n                    bigcactus2.add(scene)\r\n                    bigcactus2.position(80, 2, this.random(-15, -13))\r\n                    list.add(bigcactus2)\r\n                })\r\n            }\r\n        }, this.random(1500, 3000))\r\n    }\r\n    spawnbg3(Loader, list, scene) {\r\n        this.bg3i = setTimeout(() => {\r\n            let name = this.bg3[Math.floor(Math.random() * this.bg3.length)]\r\n            if (name === \"1flower_pink\") {\r\n                const flower_pink1 = Loader.flower_pink1()\r\n                flower_pink1.init().then(() => {\r\n                    flower_pink1.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    flower_pink1.add(scene)\r\n                    flower_pink1.position(80, -1, this.random(3, 8))\r\n                    list.add(flower_pink1)\r\n                })\r\n            }\r\n            if (name === \"1flower_yellow\") {\r\n                const flower_yellow1 = Loader.flower_yellow1()\r\n                flower_yellow1.init().then(() => {\r\n                    flower_yellow1.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    flower_yellow1.add(scene)\r\n                    flower_yellow1.position(80, -1, this.random(3, 8))\r\n                    list.add(flower_yellow1)\r\n                })\r\n            }\r\n            if (name === \"2flower_pink\") {\r\n                const flower_pink2 = Loader.flower_pink2()\r\n                flower_pink2.init().then(() => {\r\n                    flower_pink2.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    flower_pink2.add(scene)\r\n                    flower_pink2.position(80, -1, this.random(3, 8))\r\n                    list.add(flower_pink2)\r\n                })\r\n            }\r\n            if (name === \"2x2rock\") {\r\n                const rock2x2 = Loader.rock2x2()\r\n                rock2x2.init().then(() => {\r\n                    rock2x2.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock2x2.add(scene)\r\n                    rock2x2.position(80, -1, this.random(3, 8))\r\n                    list.add(rock2x2)\r\n                })\r\n            }\r\n            if (name === \"2x3rock\") {\r\n                const rock2x3 = Loader.rock2x3()\r\n                rock2x3.init().then(() => {\r\n                    rock2x3.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock2x3.add(scene)\r\n                    rock2x3.position(80, -1, this.random(3, 8))\r\n                    list.add(rock2x3)\r\n                })\r\n            }\r\n            if (name === \"3x3rock\") {\r\n                const rock3x3 = Loader.rock3x3()\r\n                rock3x3.init().then(() => {\r\n                    rock3x3.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock3x3.add(scene)\r\n                    rock3x3.position(80, -1, this.random(3, 8))\r\n                    list.add(rock3x3)\r\n                })\r\n            }\r\n            if (name === \"3x4rock\") {\r\n                const rock3x4 = Loader.rock3x4()\r\n                rock3x4.init().then(() => {\r\n                    rock3x4.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock3x4.add(scene)\r\n                    rock3x4.position(80, -1, this.random(3, 8))\r\n                    list.add(rock3x4)\r\n                })\r\n            }\r\n            if (name === \"dinoskull\") {\r\n                const dinoskull = Loader.dinoskull()\r\n                dinoskull.init().then(() => {\r\n                    dinoskull.rotation(0, -(Math.PI / 8) * 5, 0)\r\n\r\n                    dinoskull.add(scene)\r\n                    dinoskull.position(80, -1, this.random(3, 8))\r\n                    list.add(dinoskull)\r\n                })\r\n            }\r\n            if (name === \"scorpion\") {\r\n                const scorpion = Loader.scorpion()\r\n                scorpion.init().then(() => {\r\n                    scorpion.rotation(0, this.random(0, 6), 0)\r\n\r\n                    scorpion.add(scene)\r\n                    scorpion.position(80, -1, this.random(3, 8))\r\n                    list.add(scorpion)\r\n                })\r\n            }\r\n            if (name === \"seaweed\") {\r\n                const seaweed = Loader.seaweed()\r\n                seaweed.init().then(() => {\r\n                    seaweed.rotation(0, (Math.PI / 8) * 3, 0)\r\n\r\n                    seaweed.add(scene)\r\n                    seaweed.position(80, -1, this.random(-5, -3))\r\n                    list.add(seaweed)\r\n                })\r\n            }\r\n        }, this.random(1000, 2000))\r\n    }\r\n    spawnbg4(Loader, list, scene) {\r\n        this.bg4i = setTimeout(() => {\r\n            let name = this.bg4[Math.floor(Math.random() * this.bg4.length)]\r\n            if (name === \"1flower_pink\") {\r\n                const flower_pink1 = Loader.flower_pink1()\r\n                flower_pink1.init().then(() => {\r\n                    flower_pink1.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    flower_pink1.add(scene)\r\n                    flower_pink1.position(80, 0, this.random(-1, 1))\r\n                    list.add(flower_pink1)\r\n                })\r\n            }\r\n            if (name === \"1flower_yellow\") {\r\n                const flower_yellow1 = Loader.flower_yellow1()\r\n                flower_yellow1.init().then(() => {\r\n                    flower_yellow1.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    flower_yellow1.add(scene)\r\n                    flower_yellow1.position(80, 0, this.random(-1, 1))\r\n                    list.add(flower_yellow1)\r\n                })\r\n            }\r\n            if (name === \"2flower_pink\") {\r\n                const flower_pink2 = Loader.flower_pink2()\r\n                flower_pink2.init().then(() => {\r\n                    flower_pink2.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    flower_pink2.add(scene)\r\n                    flower_pink2.position(80, 0, this.random(-1, 1))\r\n                    list.add(flower_pink2)\r\n                })\r\n            }\r\n            if (name === \"2x2rock\") {\r\n                const rock2x2 = Loader.rock2x2()\r\n                rock2x2.init().then(() => {\r\n                    rock2x2.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock2x2.add(scene)\r\n                    rock2x2.position(80, 0, this.random(-1, 1))\r\n                    list.add(rock2x2)\r\n                })\r\n            }\r\n            if (name === \"2x3rock\") {\r\n                const rock2x3 = Loader.rock2x3()\r\n                rock2x3.init().then(() => {\r\n                    rock2x3.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock2x3.add(scene)\r\n                    rock2x3.position(80, 0, this.random(-1, 1))\r\n                    list.add(rock2x3)\r\n                })\r\n            }\r\n            if (name === \"3x3rock\") {\r\n                const rock3x3 = Loader.rock3x3()\r\n                rock3x3.init().then(() => {\r\n                    rock3x3.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock3x3.add(scene)\r\n                    rock3x3.position(80, 0, this.random(-1, 1))\r\n                    list.add(rock3x3)\r\n                })\r\n            }\r\n            if (name === \"3x4rock\") {\r\n                const rock3x4 = Loader.rock3x4()\r\n                rock3x4.init().then(() => {\r\n                    rock3x4.rotation(0, -(Math.PI / 8) * 0, 0)\r\n\r\n                    rock3x4.add(scene)\r\n                    rock3x4.position(80, 0, this.random(-1, 1))\r\n                    list.add(rock3x4)\r\n                })\r\n            }\r\n        }, this.random(1000, 2000))\r\n    }\r\n}\r\n\r\nexport { DecSpawn }\r\n","class EnemySpawn {\r\n    constructor(Loader, list, scene) {\r\n        this.enemy_type = [\"ptero\", \"bigcactus1\", \"bigcactus2\", \"mediumcactus2\", \"smallcactus2\", \"mediumcactus3\", \"smallcactus3\"]\r\n        for (let i = 36; i < 80; i += 18) {\r\n            let name = this.enemy_type[Math.floor(Math.random() * this.enemy_type.length)]\r\n            if (name === \"bigcactus1\") {\r\n                const bigcactus1 = Loader.bigcactus1()\r\n                bigcactus1.init().then(() => {\r\n                    bigcactus1.rotation(0, (Math.PI / 8) * 0, 0)\r\n\r\n                    bigcactus1.add(scene)\r\n                    bigcactus1.position(i, 0, 0)\r\n                    list.add(bigcactus1)\r\n                })\r\n            }\r\n            if (name === \"mediumcactus2\") {\r\n                const mediumcactus2 = Loader.mediumcactus2()\r\n                mediumcactus2.init().then(() => {\r\n                    mediumcactus2.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                    mediumcactus2.add(scene)\r\n                    mediumcactus2.position(i, 0, 0)\r\n                    list.add(mediumcactus2)\r\n                })\r\n            }\r\n            if (name === \"smallcactus2\") {\r\n                const smallcactus2 = Loader.smallcactus2()\r\n                smallcactus2.init().then(() => {\r\n                    smallcactus2.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                    smallcactus2.add(scene)\r\n                    smallcactus2.position(i, 0, 1)\r\n                    list.add(smallcactus2)\r\n                })\r\n            }\r\n            if (name === \"mediumcactus3\") {\r\n                const mediumcactus3 = Loader.mediumcactus3()\r\n                mediumcactus3.init().then(() => {\r\n                    mediumcactus3.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                    mediumcactus3.add(scene)\r\n                    mediumcactus3.position(i, 0, 1)\r\n                    list.add(mediumcactus3)\r\n                })\r\n            }\r\n            if (name === \"smallcactus3\") {\r\n                const smallcactus3 = Loader.smallcactus3()\r\n                smallcactus3.init().then(() => {\r\n                    smallcactus3.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                    smallcactus3.add(scene)\r\n                    smallcactus3.position(i, 0, 0.5)\r\n                    list.add(smallcactus3)\r\n                })\r\n            }\r\n            if (name === \"bigcactus2\") {\r\n                const bigcactus2 = Loader.bigcactus2()\r\n                bigcactus2.init().then(() => {\r\n                    bigcactus2.rotation(0, (Math.PI / 8) * 0, 0)\r\n\r\n                    bigcactus2.add(scene)\r\n                    bigcactus2.position(i, 0, 0)\r\n                    list.add(bigcactus2)\r\n                })\r\n            }\r\n            if (name === \"ptero\") {\r\n                const ptero = Loader.ptero()\r\n                ptero.init().then(() => {\r\n                    ptero.rotation(0, (Math.PI / 8) * 0, 0)\r\n                    let arr = [1, 2.7, 4]\r\n                    ptero.add(scene)\r\n                    ptero.position(i, arr[this.random(0, 2)], 0)\r\n                    list.add(ptero)\r\n                })\r\n            }\r\n        }\r\n    }\r\n    random(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    add(Loader, list, scene) {\r\n        let name = this.enemy_type[Math.floor(Math.random() * this.enemy_type.length)]\r\n        if (name === \"bigcactus1\") {\r\n            const bigcactus1 = Loader.bigcactus1()\r\n            bigcactus1.init().then(() => {\r\n                bigcactus1.rotation(0, (Math.PI / 8) * 0, 0)\r\n\r\n                bigcactus1.add(scene)\r\n                bigcactus1.position(80, 0, 0)\r\n                list.add(bigcactus1)\r\n            })\r\n        }\r\n        if (name === \"mediumcactus2\") {\r\n            const mediumcactus2 = Loader.mediumcactus2()\r\n            mediumcactus2.init().then(() => {\r\n                mediumcactus2.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                mediumcactus2.add(scene)\r\n                mediumcactus2.position(80, 0, 0)\r\n                list.add(mediumcactus2)\r\n            })\r\n        }\r\n        if (name === \"smallcactus2\") {\r\n            const smallcactus2 = Loader.smallcactus2()\r\n            smallcactus2.init().then(() => {\r\n                smallcactus2.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                smallcactus2.add(scene)\r\n                smallcactus2.position(80, 0, 1)\r\n                list.add(smallcactus2)\r\n            })\r\n        }\r\n        if (name === \"mediumcactus3\") {\r\n            const mediumcactus3 = Loader.mediumcactus3()\r\n            mediumcactus3.init().then(() => {\r\n                mediumcactus3.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                mediumcactus3.add(scene)\r\n                mediumcactus3.position(80, 0, 1)\r\n                list.add(mediumcactus3)\r\n            })\r\n        }\r\n        if (name === \"smallcactus3\") {\r\n            const smallcactus3 = Loader.smallcactus3()\r\n            smallcactus3.init().then(() => {\r\n                smallcactus3.rotation(0, (Math.PI / 8) * 4, 0)\r\n\r\n                smallcactus3.add(scene)\r\n                smallcactus3.position(80, 0, 0.5)\r\n                list.add(smallcactus3)\r\n            })\r\n        }\r\n        if (name === \"bigcactus2\") {\r\n            const bigcactus2 = Loader.bigcactus2()\r\n            bigcactus2.init().then(() => {\r\n                bigcactus2.rotation(0, (Math.PI / 8) * 0, 0)\r\n\r\n                bigcactus2.add(scene)\r\n                bigcactus2.position(80, 0, 0)\r\n                list.add(bigcactus2)\r\n            })\r\n        }\r\n        if (name === \"ptero\") {\r\n            const ptero = Loader.ptero()\r\n            ptero.init().then(() => {\r\n                ptero.rotation(0, (Math.PI / 8) * 0, 0)\r\n                let arr = [1, 2.7, 4]\r\n                ptero.add(scene)\r\n                ptero.position(80, arr[this.random(0, 2)], 0)\r\n                list.add(ptero)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport { EnemySpawn }\r\n","import \"./../public/styles/style.scss\"\r\n\r\nimport * as THREE from \"three\"\r\nimport { linkedList } from \"./linkedList\"\r\nimport { loader } from \"./loader\"\r\nimport { FloorSpaw } from \"./floorSpawn\"\r\nimport { DecSpawn } from \"./decSpawn\"\r\nimport { EnemySpawn } from \"./enemySpawn\"\r\nimport Stats from \"stats.js\"\r\n\r\nlet play = document.getElementById(\"play\")\r\nlet htScore = document.getElementById(\"score\")\r\n\r\nplay.addEventListener(\"click\", (e) => {\r\n    start()\r\n    htScore.style.display = \"flex\"\r\n    play.style.display = \"none\"\r\n})\r\n\r\ndocument.getElementById(\"restart\").addEventListener(\"click\", (e) => {\r\n    document.getElementById(\"restart\").style.display = \"none\"\r\n\r\n    document.getElementsByTagName(\"canvas\")[0].remove()\r\n    start()\r\n})\r\n\r\nfunction start() {\r\n    // add scene\r\n    const scene = new THREE.Scene()\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\r\n\r\n    let Loader = new loader(scene)\r\n\r\n    // add rendere + init to dom\r\n    const renderer = new THREE.WebGLRenderer()\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    document.body.appendChild(renderer.domElement)\r\n\r\n    renderer.setClearColor(0x42e3f5, 1)\r\n    {\r\n        const color = 0x42e3f5\r\n        const density = 0.03\r\n        scene.fog = new THREE.FogExp2(color, density)\r\n    }\r\n\r\n    //vars\r\n    const list = new linkedList()\r\n    const floorSpawn = new FloorSpaw(Loader, list, scene)\r\n    const decSpawn = new DecSpawn(Loader, list, scene)\r\n    const enemySpawn = new EnemySpawn(Loader, list, scene)\r\n\r\n    let odd = true\r\n    let speed = 0.15\r\n    let score = 0\r\n\r\n    window.scene = scene\r\n    window.camera = camera\r\n\r\n    //dev tools\r\n    // let OrbitControls = require(\"three-orbit-controls\")(THREE)\r\n    // const controls = new OrbitControls(camera, renderer.domElement)\r\n    // controls.update()\r\n\r\n    // scene.add(\r\n    //     new THREE.Line(new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(-1000, 0, 0), new THREE.Vector3(1000, 0, 0)]), new THREE.LineBasicMaterial({ color: 0x0000ff })),\r\n    //     new THREE.Line(new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, -1000, 0), new THREE.Vector3(0, 1000, 0)]), new THREE.LineBasicMaterial({ color: 0x00ff00 })),\r\n    //     new THREE.Line(new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, -1000), new THREE.Vector3(0, 0, 1000)]), new THREE.LineBasicMaterial({ color: 0xff0000 })),\r\n    //     new THREE.Line(new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(100, 100, 100)]), new THREE.LineBasicMaterial({ color: 0x000000 }))\r\n    // )\r\n\r\n    // const stats = new Stats()\r\n    // stats.showPanel(0) // 0: fps, 1: ms, 2: mb, 3+: custom\r\n    // document.body.appendChild(stats.dom)\r\n\r\n    camera.position.x = -3.4404504944505687\r\n    camera.position.y = 6.830539004426103\r\n    camera.position.z = 7.6001263422338505\r\n\r\n    camera.rotation.x = -0.6754626252238242\r\n    camera.rotation.y = -0.6427292701668502\r\n    camera.rotation.z = -0.4476952654532752\r\n\r\n    //scene resize\r\n    window.addEventListener(\"resize\", onWindowResize, false)\r\n\r\n    function onWindowResize() {\r\n        camera.aspect = window.innerWidth / window.innerHeight\r\n        camera.updateProjectionMatrix()\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight)\r\n    }\r\n\r\n    //light\r\n    {\r\n        const color = 0xffffff\r\n        const intensity = 1\r\n        const light = new THREE.AmbientLight(color, intensity)\r\n        scene.add(light)\r\n    }\r\n    {\r\n        const color = 0xffffff\r\n        const intensity = 0.5\r\n        const light = new THREE.DirectionalLight(color, intensity)\r\n        light.position.set(-100, 100, 0)\r\n        light.target.position.set(-5, 0, 0)\r\n        scene.add(light)\r\n        scene.add(light.target)\r\n        // const helper = new THREE.DirectionalLightHelper(light, 5)\r\n        // scene.add(helper)\r\n    }\r\n\r\n    //obj loader\r\n\r\n    const dino = Loader.dino()\r\n    dino.init().then(() => {\r\n        dino.add(scene)\r\n    })\r\n    window.dino = dino\r\n\r\n    {\r\n        const geometry = new THREE.BoxGeometry(150, 1, 4.5)\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x42daf5, opacity: 0.5, transparent: true })\r\n        const water = new THREE.Mesh(geometry, material)\r\n        scene.add(water)\r\n        water.position.x = 61.5\r\n        water.position.z = -4.375\r\n        water.position.y = -0.75\r\n\r\n        window.water = water\r\n    }\r\n\r\n    // ANIM\r\n    let animId, cancel\r\n\r\n    let scoreInterval = setInterval(() => {\r\n        htScore.innerHTML = (() => {\r\n            return \"0\".repeat(Math.abs(Math.floor(score).toString().length - 6)) + Math.floor(score)\r\n        })()\r\n        // console.log(Math.floor(score))\r\n    }, 100)\r\n\r\n    const animate = function () {\r\n        renderer.render(scene, camera)\r\n\r\n        list.for().forEach((e) => {\r\n            e[1].positionadd(-speed, 0, 0)\r\n            if (e[1].framePos.x < -20) {\r\n                e[1].remove(scene)\r\n                list.delete(e[0])\r\n            }\r\n        })\r\n\r\n        list.for().forEach((e) => {\r\n            if (e[1].hitbox) {\r\n                ;(() => {\r\n                    let model = e[1]\r\n                    let left_mid = [model.hitbox.position.y, model.hitbox.position.x - model.hitx / 2]\r\n                    let left_top = [model.hitbox.position.y + model.hity / 2, model.hitbox.position.x - model.hitx / 2]\r\n                    let right_top = [model.hitbox.position.y + model.hity / 2, model.hitbox.position.x + model.hitx / 2]\r\n\r\n                    let dino_top, dino_bot, dino_left, dino_right\r\n\r\n                    if (dino.isb) {\r\n                        dino_top = dino.hitboxb.position.y + dino.hitby / 2\r\n                        dino_bot = dino.hitboxb.position.y - dino.hitby / 2\r\n                        dino_left = dino.hitboxb.position.x - dino.hitbx / 2\r\n                        dino_right = dino.hitboxb.position.x + dino.hitbx / 2\r\n                    } else {\r\n                        dino_top = dino.hitbox.position.y + dino.hity / 2\r\n                        dino_bot = dino.hitbox.position.y - dino.hity / 2\r\n                        dino_left = dino.hitbox.position.x - dino.hitx / 2\r\n                        dino_right = dino.hitbox.position.x + dino.hitx / 2\r\n                    }\r\n\r\n                    if (left_mid[0] >= dino_bot && left_mid[0] <= dino_top && left_mid[1] >= dino_left && left_mid[1] <= dino_right && model.hitbox.position.z > -2) {\r\n                        cancel = true\r\n                    } else if (left_top[0] >= dino_bot && left_top[0] <= dino_top && left_top[1] >= dino_left && left_top[1] <= dino_right && model.hitbox.position.z > -2) {\r\n                        cancel = true\r\n                    } else if (right_top[0] >= dino_bot && right_top[0] <= dino_top && right_top[1] >= dino_left && right_top[1] <= dino_right && model.hitbox.position.z > -2) {\r\n                        cancel = true\r\n                    }\r\n                })()\r\n            }\r\n        })\r\n\r\n        floorSpawn.minus(speed)\r\n        if (floorSpawn.checkif()) {\r\n            floorSpawn.add(Loader, list)\r\n            if (odd) {\r\n                odd = false\r\n                decSpawn.add(Loader, list, scene)\r\n                enemySpawn.add(Loader, list, scene)\r\n            } else odd = true\r\n        }\r\n        if (speed < 0.28) {\r\n            speed += 0.00002\r\n        }\r\n\r\n        score += speed\r\n\r\n        animId = requestAnimationFrame(animate)\r\n        if (cancel) {\r\n            clearInterval(scoreInterval)\r\n            cancelAnimationFrame(animId)\r\n\r\n            document.getElementById(\"restart\").style.display = \"flex\"\r\n        }\r\n    }\r\n\r\n    animate()\r\n}\r\n\r\nwindow.start = start\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdino3d\"] = self[\"webpackChunkdino3d\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [77], () => (__webpack_require__(843)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}